var e=Object.defineProperty,n=Object.defineProperties,t=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,r=(n,t,o)=>t in n?e(n,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):n[t]=o,s=(e,n)=>{for(var t in n||(n={}))i.call(n,t)&&r(e,t,n[t]);if(o)for(var t of o(n))a.call(n,t)&&r(e,t,n[t]);return e};import{r as c,o as l,c as p,a as d,V as u,T as m,C as v,b as h,F as x,w as y,d as f,e as g,M as b,f as z,Q as w,g as E,S as P,E as _,B as T,L as S,h as O,R as N,i as C,j,k as L,l as M,m as D,n as k,p as A,_ as R}from"./vendor.5e06dac9.js";const I={};I.render=function(e,n,t,o,i,a){const r=c("router-view");return l(),p("div",null,[d(r)])};const V="\n       vec4 permute(vec4 x){return mod(((x*34.)+1.)*x,289.);}\n        vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-.85373472095314*r;}\n\n        float snoise(vec3 v){\n            const vec2 C=vec2(1./6.,1./3.);\n            const vec4 D=vec4(0.,.5,1.,2.);\n            \n            // First corner\n            vec3 i=floor(v+dot(v,C.yyy));\n            vec3 x0=v-i+dot(i,C.xxx);\n            \n            // Other corners\n            vec3 g=step(x0.yzx,x0.xyz);\n            vec3 l=1.-g;\n            vec3 i1=min(g.xyz,l.zxy);\n            vec3 i2=max(g.xyz,l.zxy);\n            \n            //  x0 = x0 - 0. + 0.0 * C\n            vec3 x1=x0-i1+1.*C.xxx;\n            vec3 x2=x0-i2+2.*C.xxx;\n            vec3 x3=x0-1.+3.*C.xxx;\n            \n            // Permutations\n            i=mod(i,289.);\n            vec4 p=permute(permute(permute(\n                i.z+vec4(0.,i1.z,i2.z,1.))\n                +i.y+vec4(0.,i1.y,i2.y,1.))\n                +i.x+vec4(0.,i1.x,i2.x,1.));\n                \n                // Gradients\n                // ( N*N points uniformly over a square, mapped onto an octahedron.)\n                float n_=1./7.;// N=7\n                vec3 ns=n_*D.wyz-D.xzx;\n                \n                vec4 j=p-49.*floor(p*ns.z*ns.z);//  mod(p,N*N)\n                \n                vec4 x_=floor(j*ns.z);\n                vec4 y_=floor(j-7.*x_);// mod(j,N)\n                \n                vec4 x=x_*ns.x+ns.yyyy;\n                vec4 y=y_*ns.x+ns.yyyy;\n                vec4 h=1.-abs(x)-abs(y);\n                \n                vec4 b0=vec4(x.xy,y.xy);\n                vec4 b1=vec4(x.zw,y.zw);\n                \n                vec4 s0=floor(b0)*2.+1.;\n                vec4 s1=floor(b1)*2.+1.;\n                vec4 sh=-step(h,vec4(0.));\n                \n                vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\n                vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\n                \n                vec3 p0=vec3(a0.xy,h.x);\n                vec3 p1=vec3(a0.zw,h.y);\n                vec3 p2=vec3(a1.xy,h.z);\n                vec3 p3=vec3(a1.zw,h.w);\n                \n                //Normalise gradients\n                vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\n                p0*=norm.x;\n                p1*=norm.y;\n                p2*=norm.z;\n                p3*=norm.w;\n                \n                // Mix final noise value\n                vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\n                m=m*m;\n                return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),\n                dot(p2,x2),dot(p3,x3)));\n            }\n            \n            vec3 snoiseVec3(vec3 x){\n                    return vec3(snoise(vec3(x)*2.-1.),\n                    snoise(vec3(x.y-19.1,x.z+33.4,x.x+47.2))*2.-1.,\n                    snoise(vec3(x.z+74.2,x.x-124.5,x.y+99.4)*2.-1.)\n                );\n            }\n        \n        vec3 curlNoise(vec3 p){\n            const float e=.1;\n            vec3 dx=vec3(e,0.,0.);\n            vec3 dy=vec3(0.,e,0.);\n            vec3 dz=vec3(0.,0.,e);\n            \n            vec3 p_x0=snoiseVec3(p-dx);\n            vec3 p_x1=snoiseVec3(p+dx);\n            vec3 p_y0=snoiseVec3(p-dy);\n            vec3 p_y1=snoiseVec3(p+dy);\n            vec3 p_z0=snoiseVec3(p-dz);\n            vec3 p_z1=snoiseVec3(p+dz);\n            \n            float x=p_y1.z-p_y0.z-p_z1.y+p_z0.y;\n            float y=p_z1.x-p_z0.x-p_x1.z+p_x0.z;\n            float z=p_x1.y-p_x0.y-p_y1.x+p_y0.x;\n            \n            const float divisor=1./(2.*e);\n            return normalize(vec3(x,y,z)*divisor);\n        }\n\n\n\n        uniform float uTime;\n        uniform float uProgress;\n        varying vec2 vUv;\n        varying vec3 vColor;\n        attribute float size;\n        attribute vec3 customColor;\n        void main(){\n            vColor = customColor;\n            vec3 noise=curlNoise(vec3(position.x*.02,position.y*.008,uTime*.05));\n            vec3 distortion=vec3(position.x*2.,position.y,1.)*noise*uProgress;\n            vec3 newPos=position+distortion;\n            vec4 modelPosition=modelMatrix*vec4(newPos,1.);\n            vec4 viewPosition=viewMatrix*modelPosition;\n            vec4 projectedPosition=projectionMatrix*viewPosition;\n            gl_Position=projectedPosition;\n            gl_PointSize=2.;\n          \n            vUv=uv;\n        }\n        ",Y="\n        uniform float uTime;\n        uniform vec2 uMouse;\n        uniform vec2 uResolution;\n        uniform sampler2D pointTexture;\n    \n        varying vec2 vUv;\n        uniform vec3 color;\n        varying vec3 vColor;  \n        void main(){\n            gl_FragColor = vec4( color * vColor, 1.0 );\n        }\n    ",F=Object.freeze({uTime:{value:0},uMouse:{value:new u(0,0)},uResolution:{value:new u(600,600)},uProgress:{value:0},uTexture:{value:(new m).load("/wp5723479.png")},color:{value:new v(16777215)}});const H={name:"polygonExplosion",data(){return{curlNoise2DVertexShader:V,curlNoiseFragmentShader:Y,curlNoiseUniforms:F,curl3DNoiseVertexShader:"\n       vec4 permute(vec4 x){return mod(((x*34.)+1.)*x,289.);}\n        vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-.85373472095314*r;}\n\n        float snoise(vec3 v){\n            const vec2 C=vec2(1./6.,1./3.);\n            const vec4 D=vec4(0.,.5,1.,2.);\n            \n            // First corner\n            vec3 i=floor(v+dot(v,C.yyy));\n            vec3 x0=v-i+dot(i,C.xxx);\n            \n            // Other corners\n            vec3 g=step(x0.yzx,x0.xyz);\n            vec3 l=1.-g;\n            vec3 i1=min(g.xyz,l.zxy);\n            vec3 i2=max(g.xyz,l.zxy);\n            \n            //  x0 = x0 - 0. + 0.0 * C\n            vec3 x1=x0-i1+1.*C.xxx;\n            vec3 x2=x0-i2+2.*C.xxx;\n            vec3 x3=x0-1.+3.*C.xxx;\n            \n            // Permutations\n            i=mod(i,289.);\n            vec4 p=permute(permute(permute(\n                i.z+vec4(0.,i1.z,i2.z,1.))\n                +i.y+vec4(0.,i1.y,i2.y,1.))\n                +i.x+vec4(0.,i1.x,i2.x,1.));\n                \n                // Gradients\n                // ( N*N points uniformly over a square, mapped onto an octahedron.)\n                float n_=1./7.;// N=7\n                vec3 ns=n_*D.wyz-D.xzx;\n                \n                vec4 j=p-49.*floor(p*ns.z*ns.z);//  mod(p,N*N)\n                \n                vec4 x_=floor(j*ns.z);\n                vec4 y_=floor(j-7.*x_);// mod(j,N)\n                \n                vec4 x=x_*ns.x+ns.yyyy;\n                vec4 y=y_*ns.x+ns.yyyy;\n                vec4 h=1.-abs(x)-abs(y);\n                \n                vec4 b0=vec4(x.xy,y.xy);\n                vec4 b1=vec4(x.zw,y.zw);\n                \n                vec4 s0=floor(b0)*2.+1.;\n                vec4 s1=floor(b1)*2.+1.;\n                vec4 sh=-step(h,vec4(0.));\n                \n                vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\n                vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\n                \n                vec3 p0=vec3(a0.xy,h.x);\n                vec3 p1=vec3(a0.zw,h.y);\n                vec3 p2=vec3(a1.xy,h.z);\n                vec3 p3=vec3(a1.zw,h.w);\n                \n                //Normalise gradients\n                vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\n                p0*=norm.x;\n                p1*=norm.y;\n                p2*=norm.z;\n                p3*=norm.w;\n                \n                // Mix final noise value\n                vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\n                m=m*m;\n                return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),\n                dot(p2,x2),dot(p3,x3)));\n            }\n            \n            vec3 snoiseVec3(vec3 x){\n                    return vec3(snoise(vec3(x)*2.-1.),\n                    snoise(vec3(x.y-19.1,x.z+33.4,x.x+47.2))*2.-1.,\n                    snoise(vec3(x.z+74.2,x.x-124.5,x.y+99.4)*2.-1.)\n                );\n            }\n        \n        vec3 curlNoise(vec3 p){\n            const float e=.1;\n            vec3 dx=vec3(e,0.,0.);\n            vec3 dy=vec3(0.,e,0.);\n            vec3 dz=vec3(0.,0.,e);\n            \n            vec3 p_x0=snoiseVec3(p-dx);\n            vec3 p_x1=snoiseVec3(p+dx);\n            vec3 p_y0=snoiseVec3(p-dy);\n            vec3 p_y1=snoiseVec3(p+dy);\n            vec3 p_z0=snoiseVec3(p-dz);\n            vec3 p_z1=snoiseVec3(p+dz);\n            \n            float x=p_y1.z-p_y0.z-p_z1.y+p_z0.y;\n            float y=p_z1.x-p_z0.x-p_x1.z+p_x0.z;\n            float z=p_x1.y-p_x0.y-p_y1.x+p_y0.x;\n            \n            const float divisor=1./(2.*e);\n            return normalize(vec3(x,y,z)*divisor);\n        }\n\n\n\n        uniform float uTime;\n        uniform float uProgress;\n        varying vec2 vUv;\n        varying vec3 vColor;\n        attribute float size;\n        attribute vec3 customColor;\n        void main(){\n            vColor = customColor;\n            vec3 noise=curlNoise(vec3(position.x*.02,position.y*.008,position.z*.05));\n            vec3 distortion=vec3(position.x,position.y,position.z)*noise*uProgress;\n            vec3 newPos=position+distortion;\n            vec4 modelPosition=modelMatrix*vec4(newPos,1.);\n            vec4 viewPosition=viewMatrix*modelPosition;\n            vec4 projectedPosition=projectionMatrix*viewPosition;\n            gl_Position=projectedPosition;\n            gl_PointSize=2.;\n          \n            vUv=uv;\n        }\n        ",config:{noiseValueTransitionScale:this.$d3.scaleLinear([0,1],[0,3]),clock:new h}}},mounted(){const e=this.$refs.renderer,n=this.$refs.box.mesh;n.position.set(0,0,-200);const t=n.geometry.getAttribute("position"),o=[],i=new v;for(let a=0,r=t.count;a<r;a++)i.setHSL(.01+a/r*.1,1,.5),i.toArray(o,3*a);n.geometry.setAttribute("customColor",new x(o,3)),e.onBeforeRender((()=>{n.rotation.x+=.01})),setTimeout((()=>{this.dispatchActivateExplosionEffect(n)}),2e3)},methods:{async dispatchActivateExplosionEffect(e){let n=e;await this.$d3.transition("activate-explosion").duration(3e3).tween("render",(()=>e=>{n.material.uniforms.uProgress.value=this.config.noiseValueTransitionScale(e)})).transition("shrink-explosion").tween("render",(()=>e=>{n.material.uniforms.uProgress.value=this.config.noiseValueTransitionScale(1-e)})).end()}}};H.render=function(e,n,t,o,i,a){const r=c("Camera"),s=c("PointLight"),u=c("BoxGeometry"),m=c("ShaderMaterial"),v=c("Points"),h=c("Scene"),x=c("Renderer");return l(),p(x,{ref:"renderer",antialias:"",resize:"window","orbit-ctrl":""},{default:y((()=>[d(r,{position:{z:10}}),d(h,null,{default:y((()=>[d(s,{position:{y:50,z:50,x:25}}),d(v,{onClick:a.dispatchActivateExplosionEffect,ref:"box",rotation:{y:Math.PI/4,z:Math.PI/4}},{default:y((()=>[d(u,{width:100,height:100,depth:100,widthSegments:100,heightSegments:100,depthSegments:100}),d(m,{props:{vertexShader:i.curl3DNoiseVertexShader,uniforms:i.curlNoiseUniforms,fragmentShader:i.curlNoiseFragmentShader}},null,8,["props"])])),_:1},8,["onClick","rotation"])])),_:1})])),_:1},512)};const $={name:"planeExplosion",data(){return{particleExplodeFragmentShader:"\nuniform float uTime;\nuniform vec2 uMouse;\nuniform vec2 uResolution;\nuniform sampler2D uTexture;\n\nvarying vec2 vUv;\n\nvoid main(){\n    vec4 color=texture2D(uTexture,vUv);\n    if(color.r<.1&&color.g<.1&&color.b<.1){\n        discard;\n    }\n    gl_FragColor=color;\n}\n",particleExplodeVertexShader:"\nvec4 permute(vec4 x){return mod(((x*34.)+1.)*x,289.);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159-.85373472095314*r;}\n\nfloat snoise(vec3 v){\n    const vec2 C=vec2(1./6.,1./3.);\n    const vec4 D=vec4(0.,.5,1.,2.);\n    \n    // First corner\n    vec3 i=floor(v+dot(v,C.yyy));\n    vec3 x0=v-i+dot(i,C.xxx);\n    \n    // Other corners\n    vec3 g=step(x0.yzx,x0.xyz);\n    vec3 l=1.-g;\n    vec3 i1=min(g.xyz,l.zxy);\n    vec3 i2=max(g.xyz,l.zxy);\n    \n    //  x0 = x0 - 0. + 0.0 * C\n    vec3 x1=x0-i1+1.*C.xxx;\n    vec3 x2=x0-i2+2.*C.xxx;\n    vec3 x3=x0-1.+3.*C.xxx;\n    \n    // Permutations\n    i=mod(i,289.);\n    vec4 p=permute(permute(permute(\n                i.z+vec4(0.,i1.z,i2.z,1.))\n                +i.y+vec4(0.,i1.y,i2.y,1.))\n                +i.x+vec4(0.,i1.x,i2.x,1.));\n                \n                // Gradients\n                // ( N*N points uniformly over a square, mapped onto an octahedron.)\n                float n_=1./7.;// N=7\n                vec3 ns=n_*D.wyz-D.xzx;\n                \n                vec4 j=p-49.*floor(p*ns.z*ns.z);//  mod(p,N*N)\n                \n                vec4 x_=floor(j*ns.z);\n                vec4 y_=floor(j-7.*x_);// mod(j,N)\n                \n                vec4 x=x_*ns.x+ns.yyyy;\n                vec4 y=y_*ns.x+ns.yyyy;\n                vec4 h=1.-abs(x)-abs(y);\n                \n                vec4 b0=vec4(x.xy,y.xy);\n                vec4 b1=vec4(x.zw,y.zw);\n                \n                vec4 s0=floor(b0)*2.+1.;\n                vec4 s1=floor(b1)*2.+1.;\n                vec4 sh=-step(h,vec4(0.));\n                \n                vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\n                vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\n                \n                vec3 p0=vec3(a0.xy,h.x);\n                vec3 p1=vec3(a0.zw,h.y);\n                vec3 p2=vec3(a1.xy,h.z);\n                vec3 p3=vec3(a1.zw,h.w);\n                \n                //Normalise gradients\n                vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\n                p0*=norm.x;\n                p1*=norm.y;\n                p2*=norm.z;\n                p3*=norm.w;\n                \n                // Mix final noise value\n                vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\n                m=m*m;\n                return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),\n                dot(p2,x2),dot(p3,x3)));\n            }\n            \n            vec3 snoiseVec3(vec3 x){\n                return vec3(snoise(vec3(x)*2.-1.),\n                snoise(vec3(x.y-19.1,x.z+33.4,x.x+47.2))*2.-1.,\n                snoise(vec3(x.z+74.2,x.x-124.5,x.y+99.4)*2.-1.)\n            );\n        }\n        \n        vec3 curlNoise(vec3 p){\n            const float e=.1;\n            vec3 dx=vec3(e,0.,0.);\n            vec3 dy=vec3(0.,e,0.);\n            vec3 dz=vec3(0.,0.,e);\n            \n            vec3 p_x0=snoiseVec3(p-dx);\n            vec3 p_x1=snoiseVec3(p+dx);\n            vec3 p_y0=snoiseVec3(p-dy);\n            vec3 p_y1=snoiseVec3(p+dy);\n            vec3 p_z0=snoiseVec3(p-dz);\n            vec3 p_z1=snoiseVec3(p+dz);\n            \n            float x=p_y1.z-p_y0.z-p_z1.y+p_z0.y;\n            float y=p_z1.x-p_z0.x-p_x1.z+p_x0.z;\n            float z=p_x1.y-p_x0.y-p_y1.x+p_y0.x;\n            \n            const float divisor=1./(2.*e);\n            return normalize(vec3(x,y,z)*divisor);\n        }\n        \n        uniform float uTime;\n        uniform float uProgress;\n        varying vec2 vUv;\n        \n        void main(){\n            vec3 noise=curlNoise(vec3(position.x*.02,position.y*.008,uTime*.05));\n            vec3 distortion=vec3(position.x*2.,position.y,1.)*noise*uProgress;\n            vec3 newPos=position+distortion;\n            vec4 modelPosition=modelMatrix*vec4(newPos,1.);\n            vec4 viewPosition=viewMatrix*modelPosition;\n            vec4 projectedPosition=projectionMatrix*viewPosition;\n            gl_Position=projectedPosition;\n            gl_PointSize=2.;\n            \n            vUv=uv;\n        }\n",curlNoiseUniforms:F,curlNoise2DVertexShader:V,curlNoiseFragmentShader:Y,config:{noiseValueTransitionScale:this.$d3.scaleLinear([0,1],[0,3]),clock:new h}}},mounted(){this.$refs.renderer;const e=this.$refs.box.mesh;e.position.set(0,0,-1e3);const n=e.geometry.getAttribute("position"),t=[],o=new v;for(let i=0,a=n.count;i<a;i++)o.setHSL(.01+i/a*.1,1,.5),o.toArray(t,3*i);e.geometry.setAttribute("customColor",new x(t,3)),setTimeout((()=>{this.dispatchActivateExplosionEffect(e)}),2e3)},methods:{async dispatchActivateExplosionEffect(e){let n=e;await this.$d3.transition("activate-explosion").duration(3e3).tween("render",(()=>e=>{n.material.uniforms.uProgress.value=this.config.noiseValueTransitionScale(e),n.material.uniforms.uTime.value=this.config.clock.getElapsedTime()})).transition("shrink-explosion").tween("render",(()=>e=>{n.material.uniforms.uProgress.value=this.config.noiseValueTransitionScale(1-e),n.material.uniforms.uTime.value=this.config.clock.getElapsedTime()})).end()}}};$.render=function(e,n,t,o,i,a){const r=c("Camera"),s=c("PointLight"),u=c("PlaneGeometry"),m=c("ShaderMaterial"),v=c("Points"),h=c("Scene"),x=c("Renderer");return l(),p("div",null,[d(x,{ref:"renderer",antialias:"",resize:"window","orbit-ctrl":""},{default:y((()=>[d(r,{position:{z:10}}),d(h,null,{default:y((()=>[d(s,{position:{y:50,z:50,x:25}}),d(v,{onClick:a.dispatchActivateExplosionEffect,ref:"box"},{default:y((()=>[d(u,{width:1770,height:1e3,widthSegments:50,heightSegments:50}),d(m,{props:{vertexShader:i.particleExplodeVertexShader,uniforms:i.curlNoiseUniforms,fragmentShader:i.particleExplodeFragmentShader}},null,8,["props"])])),_:1},8,["onClick"])])),_:1})])),_:1},512)])};const U={name:"data-handler-mixin",data(){return{rawData:{filteredSongList:[],filteredSongObj:{},fullRankingList:[],fullSongList:[]},dataAdapterConfig:{modelConverting:{timeline2ZoomScale:this.$d3.scaleLinear([new Date("1968-01-01"),new Date("1970-01-01")],[2e3,0]),valence2YCoordScale:this.$d3.scaleLinear([0,1],[-15,15]),dance2XCoordScale:this.$d3.scaleLinear([0,1],[-20,20]),relationPoint2CenteringDistanceScale:this.$d3.scaleLinear([1,20],[0,10])}}}},methods:{_rankingGraphPositionSimulation(e){return e.forEach((e=>{let[n,t]=e;this.$d3.forceSimulation(n).force("link",this.$d3.forceLink(t)).force("charge",this.$d3.forceManyBody().strength((e=>e.customStrength||2))).force("x",this.$d3.forceX()).force("y",this.$d3.forceY()).velocityDecay(.7).tick(5).stop(),n.forEach((e=>{e.position.set(e.x,e.y,e.position.z)}))})),e},_centeringPositionSimulation(e){return this.$d3.forceSimulation(e).force("charge",this.$d3.forceManyBody().strength(-10)).force("x",this.$d3.forceX()).force("y",this.$d3.forceY()).velocityDecay(.5).tick(10).stop(),e.forEach((e=>{e.position.set(e.x,e.y,e.position.z)})),e},async _initRawData(){let[e,n]=await Promise.all([this.$d3.json("./musicData/50-jahre-filtered.json"),this.$d3.json("./musicData/50-jahre.json")]),t=null==e?void 0:e.songs;Object.keys(null==e?void 0:e.songs).forEach((e=>{t[e].rankList=[]}));let o=null==n?void 0:n.entries;this.lodash.assign(this.rawData,{fullRankingList:o,filteredSongObj:t})},_aggregateSongModal(){let{filteredSongObj:e,fullRankingList:o}=this.rawData;o.forEach((n=>{let t=null==n?void 0:n.song;if(e[t]){let o=e[t];o.rankList.push(n),o.releaseDate=n.date}}));let i=[];const{timeline2ZoomScale:a,valence2YCoordScale:r,dance2XCoordScale:c,relationPoint2CenteringDistanceScale:l}=this.dataAdapterConfig.modelConverting;Object.keys(e).forEach(((n,t)=>{let o=e[n],l=new this.THREE.Vector3(c(o.dance),r(o.valence),a(new Date(o.releaseDate)));const p={position:l,x:l.x,y:l.y,index:t};i.push(s(s({},this.lodash.cloneDeep(e[n])),p))}));let p=this._centeringPositionSimulation(i);const d=this.$d3.scaleLinear([1,20],[-2.5,-4]);let u=p.map(((e,o)=>{let{rankList:i,position:r}=e,c=i.map(((e,n)=>{let t=l(e.rank),i=Math.random()*Math.PI*2,[s,c]=[t*Math.sin(i),t*Math.cos(i)],p=new this.THREE.Vector3(r.x+s,r.y+c,a(new Date(e.date)));return{id:`graph-${o}-${n}`,position:p,x:r.x,y:r.y,customStrength:d(e.rank)}})),p=[];var u,m;return c.forEach(((e,n)=>{n>=1&&p.push({source:n-1,target:n})})),[[...c,(u=s({},e),m={fx:e.x,fy:e.y},n(u,t(m)))],p]}));return[p,this._rankingGraphPositionSimulation(u)]},async initFilteredRelationMapData(){return await this._initRawData(),this._aggregateSongModal()}}},X=f()(((e,n,t,o,i,a)=>null));U.render=X,U.__scopeId="data-v-6a67e376";const Z=function(e,n){var t,o,i,a,r,s;void 0===n&&console.warn('THREE.customOrbitControls: The second parameter "domElement" is now mandatory.'),n===document&&console.error('THREE.customOrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=n,this.enabled=!0,this.target=new g,this.minDistance=0,this.maxDistance=2e3,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:b.ROTATE,MIDDLE:b.DOLLY,RIGHT:b.PAN},this.touches={ONE:z.ROTATE,TWO:z.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return x.phi},this.getAzimuthalAngle=function(){return x.theta},this.listenToKeyEvents=function(e){e.addEventListener("keydown",ie),this._domElementKeyEvents=e},this.saveState=function(){c.target0.copy(c.target),c.position0.copy(c.object.position),c.zoom0=c.object.zoom},this.reset=function(){c.target.copy(c.target0),c.object.position.copy(c.position0),c.object.zoom=c.zoom0,c.object.updateProjectionMatrix(),c.dispatchEvent(l),c.update(),v=m.NONE},this.update=(t=new g,o=(new w).setFromUnitVectors(e.up,new g(0,1,0)),i=o.clone().invert(),a=new g,r=new w,s=2*Math.PI,function(){E.update();var e=c.object.position;t.copy(e).sub(c.target),t.applyQuaternion(o),x.setFromVector3(t),c.autoRotate&&v===m.NONE&&A(2*Math.PI/60/60*c.autoRotateSpeed),c.enableDamping?(x.theta+=y.theta*c.dampingFactor,x.phi+=y.phi*c.dampingFactor):(x.theta+=y.theta,x.phi+=y.phi);var n=c.minAzimuthAngle,p=c.maxAzimuthAngle;return isFinite(n)&&isFinite(p)&&(n<-Math.PI?n+=s:n>Math.PI&&(n-=s),p<-Math.PI?p+=s:p>Math.PI&&(p-=s),x.theta=n<=p?Math.max(n,Math.min(p,x.theta)):x.theta>(n+p)/2?Math.max(n,x.theta):Math.min(p,x.theta)),x.phi=Math.max(c.minPolarAngle,Math.min(c.maxPolarAngle,x.phi)),x.makeSafe(),x.radius=c.maxDistance*c.scale,x.radius=Math.max(c.minDistance,Math.min(c.maxDistance,x.radius)),!0===c.enableDamping?c.target.addScaledVector(f,c.dampingFactor):c.target.add(f),t.setFromSpherical(x),t.applyQuaternion(i),e.copy(c.target).add(t),c.object.lookAt(c.target),!0===c.enableDamping?(y.theta*=1-c.dampingFactor,y.phi*=1-c.dampingFactor,f.multiplyScalar(1-c.dampingFactor)):(y.set(0,0,0),f.set(0,0,0)),!!(_||a.distanceToSquared(c.object.position)>h||8*(1-r.dot(c.object.quaternion))>h)&&(c.dispatchEvent(l),a.copy(c.object.position),r.copy(c.object.quaternion),_=!1,!0)}),this.dispose=function(){c.domElement.removeEventListener("contextmenu",ce),c.domElement.removeEventListener("pointerdown",J),c.domElement.removeEventListener("wheel",oe),c.domElement.removeEventListener("touchstart",ae),c.domElement.removeEventListener("touchend",se),c.domElement.removeEventListener("touchmove",re),c.domElement.ownerDocument.removeEventListener("pointermove",ee),c.domElement.ownerDocument.removeEventListener("pointerup",ne),null!==c._domElementKeyEvents&&c._domElementKeyEvents.removeEventListener("keydown",ie)},this.scale=1;var c=this,l={type:"change"},p={type:"start"},d={type:"end"},m={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},v=m.NONE,h=1e-6,x=new P,y=new P,f=new g,_=!1,T=new u,S=new u,O=new u,N=new u,C=new u,j=new u,L=new u,M=new u,D=new u;function k(){return Math.pow(.95,c.zoomSpeed)}function A(e){y.theta-=e}function R(e){y.phi-=e}var I,V=(I=new g,function(e,n){I.setFromMatrixColumn(n,0),I.multiplyScalar(-e),f.add(I)}),Y=function(){var e=new g;return function(n,t){!0===c.screenSpacePanning?e.setFromMatrixColumn(t,1):(e.setFromMatrixColumn(t,0),e.crossVectors(c.object.up,e)),e.multiplyScalar(n),f.add(e)}}(),F=function(){var e=new g;return function(n,t){var o=c.domElement;if(c.object.isPerspectiveCamera){var i=c.object.position;e.copy(i).sub(c.target);var a=e.length();a*=Math.tan(c.object.fov/2*Math.PI/180),V(2*n*a/o.clientHeight,c.object.matrix),Y(2*t*a/o.clientHeight,c.object.matrix)}else c.object.isOrthographicCamera?(V(n*(c.object.right-c.object.left)/c.object.zoom/o.clientWidth,c.object.matrix),Y(t*(c.object.top-c.object.bottom)/c.object.zoom/o.clientHeight,c.object.matrix)):(console.warn("WARNING: customOrbitControls.js encountered an unknown camera type - pan disabled."),c.enablePan=!1)}}();function H(e){c.object.isPerspectiveCamera?$(c.scale/e):c.object.isOrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom*e)),c.object.updateProjectionMatrix(),_=!0):(console.warn("WARNING: customOrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),c.enableZoom=!1)}function $(e){const n={scale:c.scale};new E.Tween(n).to({scale:e},800).easing(E.Easing.Cubic.Out).onUpdate((()=>{c.scale=n.scale})).start()}function U(e){c.object.isPerspectiveCamera?$(c.scale*e):c.object.isOrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom/e)),c.object.updateProjectionMatrix(),_=!0):(console.warn("WARNING: customOrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),c.enableZoom=!1)}function X(e){T.set(e.clientX,e.clientY)}function Z(e){N.set(e.clientX,e.clientY)}function B(e){if(1==e.touches.length)T.set(e.touches[0].pageX,e.touches[0].pageY);else{var n=.5*(e.touches[0].pageX+e.touches[1].pageX),t=.5*(e.touches[0].pageY+e.touches[1].pageY);T.set(n,t)}}function G(e){if(1==e.touches.length)N.set(e.touches[0].pageX,e.touches[0].pageY);else{var n=.5*(e.touches[0].pageX+e.touches[1].pageX),t=.5*(e.touches[0].pageY+e.touches[1].pageY);N.set(n,t)}}function q(e){var n=e.touches[0].pageX-e.touches[1].pageX,t=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(n*n+t*t);L.set(0,o)}function K(e){if(1==e.touches.length)S.set(e.touches[0].pageX,e.touches[0].pageY);else{var n=.5*(e.touches[0].pageX+e.touches[1].pageX),t=.5*(e.touches[0].pageY+e.touches[1].pageY);S.set(n,t)}O.subVectors(S,T).multiplyScalar(c.rotateSpeed);var o=c.domElement;A(2*Math.PI*O.x/o.clientHeight),R(2*Math.PI*O.y/o.clientHeight),T.copy(S)}function W(e){if(1==e.touches.length)C.set(e.touches[0].pageX,e.touches[0].pageY);else{var n=.5*(e.touches[0].pageX+e.touches[1].pageX),t=.5*(e.touches[0].pageY+e.touches[1].pageY);C.set(n,t)}j.subVectors(C,N).multiplyScalar(c.panSpeed),F(j.x,j.y),N.copy(C)}function Q(e){var n=e.touches[0].pageX-e.touches[1].pageX,t=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(n*n+t*t);M.set(0,o),D.set(0,Math.pow(M.y/L.y,c.zoomSpeed)),H(D.y),L.copy(M)}function J(e){if(!1!==c.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){var n;switch(e.preventDefault(),c.domElement.focus?c.domElement.focus():window.focus(),e.button){case 0:n=c.mouseButtons.LEFT;break;case 1:n=c.mouseButtons.MIDDLE;break;case 2:n=c.mouseButtons.RIGHT;break;default:n=-1}switch(n){case b.DOLLY:if(!1===c.enableZoom)return;!function(e){L.set(e.clientX,e.clientY)}(e),v=m.DOLLY;break;case b.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===c.enablePan)return;Z(e),v=m.PAN}else{if(!1===c.enableRotate)return;X(e),v=m.ROTATE}break;case b.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===c.enableRotate)return;X(e),v=m.ROTATE}else{if(!1===c.enablePan)return;Z(e),v=m.PAN}break;default:v=m.NONE}v!==m.NONE&&(c.domElement.ownerDocument.addEventListener("pointermove",ee),c.domElement.ownerDocument.addEventListener("pointerup",ne),c.dispatchEvent(p))}(e)}}function ee(e){if(!1!==c.enabled)switch(e.pointerType){case"mouse":te(e);case"pen":te(e)}}function ne(e){switch(e.pointerType){case"mouse":case"pen":!function(e){if(c.domElement.ownerDocument.removeEventListener("pointermove",ee),c.domElement.ownerDocument.removeEventListener("pointerup",ne),!1===c.enabled)return;c.dispatchEvent(d),v=m.NONE}()}}function te(e){if(!1!==c.enabled)switch(e.preventDefault(),v){case m.ROTATE:if(!1===c.enableRotate)return;!function(e){S.set(e.clientX,e.clientY),O.subVectors(S,T).multiplyScalar(c.rotateSpeed);var n=c.domElement;A(2*Math.PI*O.x/n.clientHeight),R(2*Math.PI*O.y/n.clientHeight),T.copy(S),c.update()}(e);break;case m.DOLLY:if(!1===c.enableZoom)return;!function(e){M.set(e.clientX,e.clientY),D.subVectors(M,L),D.y>0?H(k()):D.y<0&&U(k()),L.copy(M),c.update()}(e);break;case m.PAN:if(!1===c.enablePan)return;!function(e){C.set(e.clientX,e.clientY),j.subVectors(C,N).multiplyScalar(c.panSpeed),F(j.x,j.y),N.copy(C),c.update()}(e)}}function oe(e){!1===c.enabled||!1===c.enableZoom||v!==m.NONE&&v!==m.ROTATE||(e.preventDefault(),c.dispatchEvent(p),function(e){e.deltaY<0?U(k()):e.deltaY>0&&H(k()),c.update()}(e),c.dispatchEvent(d))}function ie(e){!1!==c.enabled&&!1!==c.enablePan&&function(e){var n=!1;switch(e.code){case c.keys.UP:F(0,c.keyPanSpeed),n=!0;break;case c.keys.BOTTOM:F(0,-c.keyPanSpeed),n=!0;break;case c.keys.LEFT:F(c.keyPanSpeed,0),n=!0;break;case c.keys.RIGHT:F(-c.keyPanSpeed,0),n=!0}n&&(e.preventDefault(),c.update())}(e)}function ae(e){if(!1!==c.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(c.touches.ONE){case z.ROTATE:if(!1===c.enableRotate)return;B(e),v=m.TOUCH_ROTATE;break;case z.PAN:if(!1===c.enablePan)return;G(e),v=m.TOUCH_PAN;break;default:v=m.NONE}break;case 2:switch(c.touches.TWO){case z.DOLLY_PAN:if(!1===c.enableZoom&&!1===c.enablePan)return;!function(e){c.enableZoom&&q(e),c.enablePan&&G(e)}(e),v=m.TOUCH_DOLLY_PAN;break;case z.DOLLY_ROTATE:if(!1===c.enableZoom&&!1===c.enableRotate)return;!function(e){c.enableZoom&&q(e),c.enableRotate&&B(e)}(e),v=m.TOUCH_DOLLY_ROTATE;break;default:v=m.NONE}break;default:v=m.NONE}v!==m.NONE&&c.dispatchEvent(p)}}function re(e){if(!1!==c.enabled)switch(e.preventDefault(),v){case m.TOUCH_ROTATE:if(!1===c.enableRotate)return;K(e),c.update();break;case m.TOUCH_PAN:if(!1===c.enablePan)return;W(e),c.update();break;case m.TOUCH_DOLLY_PAN:if(!1===c.enableZoom&&!1===c.enablePan)return;!function(e){c.enableZoom&&Q(e),c.enablePan&&W(e)}(e),c.update();break;case m.TOUCH_DOLLY_ROTATE:if(!1===c.enableZoom&&!1===c.enableRotate)return;!function(e){c.enableZoom&&Q(e),c.enableRotate&&K(e)}(e),c.update();break;default:v=m.NONE}}function se(e){!1!==c.enabled&&(c.dispatchEvent(d),v=m.NONE)}function ce(e){!1!==c.enabled&&e.preventDefault()}c.domElement.addEventListener("contextmenu",ce),c.domElement.addEventListener("pointerdown",J),c.domElement.addEventListener("wheel",oe),c.domElement.addEventListener("touchstart",ae),c.domElement.addEventListener("touchend",se),c.domElement.addEventListener("touchmove",re),this.update()};(Z.prototype=Object.create(_.prototype)).constructor=Z;var B=function(e,n){Z.call(this,e,n),this.screenSpacePanning=!1,this.mouseButtons.LEFT=b.PAN,this.mouseButtons.RIGHT=b.ROTATE,this.touches.ONE=z.PAN,this.touches.TWO=z.DOLLY_ROTATE};(B.prototype=Object.create(_.prototype)).constructor=B;const G={name:"cameraTester",mixins:[U],data(){return{config:{viewPortSpinRatio:this.$d3.scaleLinear([-1,1],[0,1]),background:"black",orbitControlConfig:{enableZoom:!0,zoomSpeed:3,enableRotate:!0,minDistance:0,maxDistance:2e3,enableDamping:!0,dampingFactor:.25}},interact:{mousePosition:new g,cameraPosition:{x:0,y:0,z:2e3},zoomPos:2e3,zoom:500},adaptedSongList:[]}},computed:{dynamicMousePosition(){}},watch:{},methods:{initOrbitControl(){let{renderer:e}=this.$refs;const n=new Z(e.camera,e.renderer.domElement);this.config.orbitControlConfig instanceof Object&&Object.entries(this.config.orbitControlConfig).forEach((([e,t])=>{n[e]=t})),e.onBeforeRender((()=>{n.update()}))},renderRelationGraph(e){e.forEach((e=>{let[n,t]=e;this.renderLink(t),this.renderNode(n,"white")}))},renderLink(e,n="white"){const t=this.$refs.sceneInstance,o=new this.THREE.LineBasicMaterial({opacity:.1,transparent:!0});e.forEach((e=>{const n=[e.source.position,e.target.position],i=(new T).setFromPoints(n);let a=new S(i,o);t.add(a)}))},renderNode(e,n="red"){const t=this.$refs.sceneInstance,o=new O({map:(new m).load("./musicData/circle.png"),color:n}),i=new this.THREE.Sprite(o);e.forEach((e=>{let n=i.clone();t.add(n),n.position.copy(e.position)}))},initBackGround(){let e=(new m).load("/3-trial/backgroundTexture.png");e.wrapT=N,this.config.background=e},adjustZoom(e){let{zoomPos:n,zoom:t}=this.interact;this.interact.zoom=C.clamp(Math.pow(Math.E,n),0,500),e.deltaY<0?this.interact.zoomPos-=this.config.orbitControlConfig.zoomSpeed:e.deltaY>0&&(this.interact.zoomPos+=this.config.orbitControlConfig.zoomSpeed)},adjustCameraPosition(){let{renderer:e}=this.$refs,{zoomPos:n}=this.interact,{x:t,y:o}=e.three.pointer.positionN;e.size;let{viewPortSpinRatio:i}=this.config;this.interact.cameraPosition.x=Math.sin(.25*Math.PI*(i(t)-.5))*n,this.interact.cameraPosition.y=Math.sin(.25*Math.PI*(i(o)-.5))*n,this.interact.cameraPosition.z=Math.cos(.5*Math.PI*(i(t)-.5))*n}},async mounted(){const{renderer:e,box:n}=this.$refs;this.initBackGround(),this.initOrbitControl();let[t,o]=await this.initFilteredRelationMapData();this.renderNode(t),this.renderRelationGraph(o),e.onBeforeRender((()=>{n.mesh.rotation.x+=.01}))}},q=f(),K=q(((e,n,t,o,i,a)=>{const r=c("Camera"),s=c("PointLight"),u=c("LambertMaterial"),m=c("Box"),v=c("Scene"),h=c("Renderer");return l(),p(h,{ref:"renderer",antialias:"",resize:"window",pointer:""},{default:q((()=>[d(r,{far:500,ref:"camera",position:i.interact.cameraPosition},null,8,["position"]),d(v,{ref:"sceneInstance",background:i.config.background},{default:q((()=>[d(s,{position:{y:0,z:50,x:25}}),d(m,{ref:"box",size:1,position:{x:0,y:0,z:-30},rotation:{y:Math.PI/4,z:Math.PI/4}},{default:q((()=>[d(u)])),_:1},8,["rotation"]),d(m,{ref:"box1",size:1,position:{x:30,y:0,z:-30},rotation:{y:Math.PI/4,z:Math.PI/4}},{default:q((()=>[d(u)])),_:1},8,["rotation"]),d(m,{ref:"box2",size:1,position:{x:30,y:30,z:-30},rotation:{y:Math.PI/4,z:Math.PI/4}},{default:q((()=>[d(u)])),_:1},8,["rotation"])])),_:1},8,["background"])])),_:1},512)}));G.render=K,G.__scopeId="data-v-4264fbcf";var W=[{path:"/polygonExplosion",component:H},{path:"/planeExplosion",component:$},{path:"/cameraTester",component:G}];const Q=j({history:L(),routes:W}),J=M(I);J.use(Q),J.use(D),J.mount("#app"),J.config.globalProperties.THREE=k,J.config.globalProperties.$d3=A,J.config.globalProperties.lodash=R;
