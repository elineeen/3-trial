var e=Object.defineProperty,n=Object.prototype.hasOwnProperty,t=Object.getOwnPropertySymbols,o=Object.prototype.propertyIsEnumerable,i=(n,t,o)=>t in n?e(n,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):n[t]=o,a=(e,a)=>{for(var r in a||(a={}))n.call(a,r)&&i(e,r,a[r]);if(t)for(var r of t(a))o.call(a,r)&&i(e,r,a[r]);return e};import{r,o as s,c,a as l,V as d,T as p,C as u,b as m,F as v,w as h,d as f,e as x,M as y,f as g,Q as w,g as b,S as _,E as z,B as E,L as P,h as T,i as C,j as S,k as L,R as k,u as N,G as I,l as O,P as j,m as M,n as R,p as A,q as D,s as V,t as U,v as F,x as $,y as H,z as Y,A as G,D as B,H as X,I as Z,J as q,K as W,N as K,O as Q,U as J,W as ee,X as ne,Y as te,Z as oe,_ as ie,$ as ae,a0 as re,a1 as se,a2 as ce,a3 as le,a4 as de,a5 as pe,a6 as ue,a7 as me,a8 as ve,a9 as he,aa as fe}from"./vendor.2f44dbbe.js";!function(e=".",n="__import__"){try{self[n]=new Function("u","return import(u)")}catch(t){const o=new URL(e,location),i=e=>{URL.revokeObjectURL(e.src),e.remove()};self[n]=e=>new Promise(((t,a)=>{const r=new URL(e,o);if(self[n].moduleMap[r])return t(self[n].moduleMap[r]);const s=new Blob([`import * as m from '${r}';`,`${n}.moduleMap['${r}']=m;`],{type:"text/javascript"}),c=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(s),onerror(){a(new Error(`Failed to import: ${e}`)),i(c)},onload(){t(self[n].moduleMap[r]),i(c)}});document.head.appendChild(c)})),self[n].moduleMap={}}}("/3-trial/assets/");const xe={};xe.render=function(e,n,t,o,i,a){const d=r("router-view");return s(),c("div",null,[l(d)])};const ye="\n       vec4 permute(vec4 x){return mod(((x*34.)+1.)*x,289.);}\n        vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-.85373472095314*r;}\n\n        float snoise(vec3 v){\n            const vec2 C=vec2(1./6.,1./3.);\n            const vec4 D=vec4(0.,.5,1.,2.);\n            \n            // First corner\n            vec3 i=floor(v+dot(v,C.yyy));\n            vec3 x0=v-i+dot(i,C.xxx);\n            \n            // Other corners\n            vec3 g=step(x0.yzx,x0.xyz);\n            vec3 l=1.-g;\n            vec3 i1=min(g.xyz,l.zxy);\n            vec3 i2=max(g.xyz,l.zxy);\n            \n            //  x0 = x0 - 0. + 0.0 * C\n            vec3 x1=x0-i1+1.*C.xxx;\n            vec3 x2=x0-i2+2.*C.xxx;\n            vec3 x3=x0-1.+3.*C.xxx;\n            \n            // Permutations\n            i=mod(i,289.);\n            vec4 p=permute(permute(permute(\n                i.z+vec4(0.,i1.z,i2.z,1.))\n                +i.y+vec4(0.,i1.y,i2.y,1.))\n                +i.x+vec4(0.,i1.x,i2.x,1.));\n                \n                // Gradients\n                // ( N*N points uniformly over a square, mapped onto an octahedron.)\n                float n_=1./7.;// N=7\n                vec3 ns=n_*D.wyz-D.xzx;\n                \n                vec4 j=p-49.*floor(p*ns.z*ns.z);//  mod(p,N*N)\n                \n                vec4 x_=floor(j*ns.z);\n                vec4 y_=floor(j-7.*x_);// mod(j,N)\n                \n                vec4 x=x_*ns.x+ns.yyyy;\n                vec4 y=y_*ns.x+ns.yyyy;\n                vec4 h=1.-abs(x)-abs(y);\n                \n                vec4 b0=vec4(x.xy,y.xy);\n                vec4 b1=vec4(x.zw,y.zw);\n                \n                vec4 s0=floor(b0)*2.+1.;\n                vec4 s1=floor(b1)*2.+1.;\n                vec4 sh=-step(h,vec4(0.));\n                \n                vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\n                vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\n                \n                vec3 p0=vec3(a0.xy,h.x);\n                vec3 p1=vec3(a0.zw,h.y);\n                vec3 p2=vec3(a1.xy,h.z);\n                vec3 p3=vec3(a1.zw,h.w);\n                \n                //Normalise gradients\n                vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\n                p0*=norm.x;\n                p1*=norm.y;\n                p2*=norm.z;\n                p3*=norm.w;\n                \n                // Mix final noise value\n                vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\n                m=m*m;\n                return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),\n                dot(p2,x2),dot(p3,x3)));\n            }\n            \n            vec3 snoiseVec3(vec3 x){\n                    return vec3(snoise(vec3(x)*2.-1.),\n                    snoise(vec3(x.y-19.1,x.z+33.4,x.x+47.2))*2.-1.,\n                    snoise(vec3(x.z+74.2,x.x-124.5,x.y+99.4)*2.-1.)\n                );\n            }\n        \n        vec3 curlNoise(vec3 p){\n            const float e=.1;\n            vec3 dx=vec3(e,0.,0.);\n            vec3 dy=vec3(0.,e,0.);\n            vec3 dz=vec3(0.,0.,e);\n            \n            vec3 p_x0=snoiseVec3(p-dx);\n            vec3 p_x1=snoiseVec3(p+dx);\n            vec3 p_y0=snoiseVec3(p-dy);\n            vec3 p_y1=snoiseVec3(p+dy);\n            vec3 p_z0=snoiseVec3(p-dz);\n            vec3 p_z1=snoiseVec3(p+dz);\n            \n            float x=p_y1.z-p_y0.z-p_z1.y+p_z0.y;\n            float y=p_z1.x-p_z0.x-p_x1.z+p_x0.z;\n            float z=p_x1.y-p_x0.y-p_y1.x+p_y0.x;\n            \n            const float divisor=1./(2.*e);\n            return normalize(vec3(x,y,z)*divisor);\n        }\n\n\n\n        uniform float uTime;\n        uniform float uProgress;\n        varying vec2 vUv;\n        varying vec3 vColor;\n        attribute float size;\n        attribute vec3 customColor;\n        void main(){\n            vColor = customColor;\n            vec3 noise=curlNoise(vec3(position.x*.02,position.y*.008,uTime*.05));\n            vec3 distortion=vec3(position.x*2.,position.y,1.)*noise*uProgress;\n            vec3 newPos=position+distortion;\n            vec4 modelPosition=modelMatrix*vec4(newPos,1.);\n            vec4 viewPosition=viewMatrix*modelPosition;\n            vec4 projectedPosition=projectionMatrix*viewPosition;\n            gl_Position=projectedPosition;\n            gl_PointSize=2.;\n          \n            vUv=uv;\n        }\n        ",ge="\n        uniform float uTime;\n        uniform vec2 uMouse;\n        uniform vec2 uResolution;\n        uniform sampler2D pointTexture;\n    \n        varying vec2 vUv;\n        uniform vec3 color;\n        varying vec3 vColor;  \n        void main(){\n            gl_FragColor = vec4( color * vColor, 1.0 );\n        }\n    ",we=Object.freeze({uTime:{value:0},uMouse:{value:new d(0,0)},uResolution:{value:new d(600,600)},uProgress:{value:0},uTexture:{value:(new p).load("/wp5723479.png")},color:{value:new u(16777215)}});const be={name:"polygonExplosion",data(){return{curlNoise2DVertexShader:ye,curlNoiseFragmentShader:ge,curlNoiseUniforms:we,curl3DNoiseVertexShader:"\n       vec4 permute(vec4 x){return mod(((x*34.)+1.)*x,289.);}\n        vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-.85373472095314*r;}\n\n        float snoise(vec3 v){\n            const vec2 C=vec2(1./6.,1./3.);\n            const vec4 D=vec4(0.,.5,1.,2.);\n            \n            // First corner\n            vec3 i=floor(v+dot(v,C.yyy));\n            vec3 x0=v-i+dot(i,C.xxx);\n            \n            // Other corners\n            vec3 g=step(x0.yzx,x0.xyz);\n            vec3 l=1.-g;\n            vec3 i1=min(g.xyz,l.zxy);\n            vec3 i2=max(g.xyz,l.zxy);\n            \n            //  x0 = x0 - 0. + 0.0 * C\n            vec3 x1=x0-i1+1.*C.xxx;\n            vec3 x2=x0-i2+2.*C.xxx;\n            vec3 x3=x0-1.+3.*C.xxx;\n            \n            // Permutations\n            i=mod(i,289.);\n            vec4 p=permute(permute(permute(\n                i.z+vec4(0.,i1.z,i2.z,1.))\n                +i.y+vec4(0.,i1.y,i2.y,1.))\n                +i.x+vec4(0.,i1.x,i2.x,1.));\n                \n                // Gradients\n                // ( N*N points uniformly over a square, mapped onto an octahedron.)\n                float n_=1./7.;// N=7\n                vec3 ns=n_*D.wyz-D.xzx;\n                \n                vec4 j=p-49.*floor(p*ns.z*ns.z);//  mod(p,N*N)\n                \n                vec4 x_=floor(j*ns.z);\n                vec4 y_=floor(j-7.*x_);// mod(j,N)\n                \n                vec4 x=x_*ns.x+ns.yyyy;\n                vec4 y=y_*ns.x+ns.yyyy;\n                vec4 h=1.-abs(x)-abs(y);\n                \n                vec4 b0=vec4(x.xy,y.xy);\n                vec4 b1=vec4(x.zw,y.zw);\n                \n                vec4 s0=floor(b0)*2.+1.;\n                vec4 s1=floor(b1)*2.+1.;\n                vec4 sh=-step(h,vec4(0.));\n                \n                vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\n                vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\n                \n                vec3 p0=vec3(a0.xy,h.x);\n                vec3 p1=vec3(a0.zw,h.y);\n                vec3 p2=vec3(a1.xy,h.z);\n                vec3 p3=vec3(a1.zw,h.w);\n                \n                //Normalise gradients\n                vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\n                p0*=norm.x;\n                p1*=norm.y;\n                p2*=norm.z;\n                p3*=norm.w;\n                \n                // Mix final noise value\n                vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\n                m=m*m;\n                return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),\n                dot(p2,x2),dot(p3,x3)));\n            }\n            \n            vec3 snoiseVec3(vec3 x){\n                    return vec3(snoise(vec3(x)*2.-1.),\n                    snoise(vec3(x.y-19.1,x.z+33.4,x.x+47.2))*2.-1.,\n                    snoise(vec3(x.z+74.2,x.x-124.5,x.y+99.4)*2.-1.)\n                );\n            }\n        \n        vec3 curlNoise(vec3 p){\n            const float e=.1;\n            vec3 dx=vec3(e,0.,0.);\n            vec3 dy=vec3(0.,e,0.);\n            vec3 dz=vec3(0.,0.,e);\n            \n            vec3 p_x0=snoiseVec3(p-dx);\n            vec3 p_x1=snoiseVec3(p+dx);\n            vec3 p_y0=snoiseVec3(p-dy);\n            vec3 p_y1=snoiseVec3(p+dy);\n            vec3 p_z0=snoiseVec3(p-dz);\n            vec3 p_z1=snoiseVec3(p+dz);\n            \n            float x=p_y1.z-p_y0.z-p_z1.y+p_z0.y;\n            float y=p_z1.x-p_z0.x-p_x1.z+p_x0.z;\n            float z=p_x1.y-p_x0.y-p_y1.x+p_y0.x;\n            \n            const float divisor=1./(2.*e);\n            return normalize(vec3(x,y,z)*divisor);\n        }\n\n\n\n        uniform float uTime;\n        uniform float uProgress;\n        varying vec2 vUv;\n        varying vec3 vColor;\n        attribute float size;\n        attribute vec3 customColor;\n        void main(){\n            vColor = customColor;\n            vec3 noise=curlNoise(vec3(position.x*.02,position.y*.008,position.z*.05));\n            vec3 distortion=vec3(position.x,position.y,position.z)*noise*uProgress;\n            vec3 newPos=position+distortion;\n            vec4 modelPosition=modelMatrix*vec4(newPos,1.);\n            vec4 viewPosition=viewMatrix*modelPosition;\n            vec4 projectedPosition=projectionMatrix*viewPosition;\n            gl_Position=projectedPosition;\n            gl_PointSize=2.;\n          \n            vUv=uv;\n        }\n        ",config:{noiseValueTransitionScale:this.$d3.scaleLinear([0,1],[0,3]),clock:new m}}},mounted(){const e=this.$refs.renderer,n=this.$refs.box.mesh;n.position.set(0,0,-200);const t=n.geometry.getAttribute("position"),o=[],i=new u("skyblue");for(let a=0,r=t.count;a<r;a++)i.toArray(o,3*a);n.geometry.setAttribute("customColor",new v(o,3)),e.onBeforeRender((()=>{n.rotation.x+=.01})),setTimeout((()=>{this.dispatchActivateExplosionEffect(n)}),2e3)},methods:{async dispatchActivateExplosionEffect(e){let n=e;await this.$d3.transition("activate-explosion").duration(3e3).tween("render",(()=>e=>{n.material.uniforms.uProgress.value=this.config.noiseValueTransitionScale(e)})).transition("shrink-explosion").tween("render",(()=>e=>{n.material.uniforms.uProgress.value=this.config.noiseValueTransitionScale(1-e)})).end()}}};be.render=function(e,n,t,o,i,a){const d=r("Camera"),p=r("PointLight"),u=r("BoxGeometry"),m=r("ShaderMaterial"),v=r("Points"),f=r("Scene"),x=r("Renderer");return s(),c(x,{ref:"renderer",antialias:"",resize:"window","orbit-ctrl":""},{default:h((()=>[l(d,{position:{z:10}}),l(f,null,{default:h((()=>[l(p,{position:{y:50,z:50,x:25}}),l(v,{onClick:a.dispatchActivateExplosionEffect,ref:"box",rotation:{y:Math.PI/4,z:Math.PI/4}},{default:h((()=>[l(u,{width:100,height:100,depth:100,widthSegments:100,heightSegments:100,depthSegments:100}),l(m,{props:{vertexShader:i.curl3DNoiseVertexShader,uniforms:i.curlNoiseUniforms,fragmentShader:i.curlNoiseFragmentShader}},null,8,["props"])])),_:1},8,["onClick","rotation"])])),_:1})])),_:1},512)};const _e={name:"planeExplosion",data(){return{particleExplodeFragmentShader:"\nuniform float uTime;\nuniform vec2 uMouse;\nuniform vec2 uResolution;\nuniform sampler2D uTexture;\n\nvarying vec2 vUv;\n\nvoid main(){\n    vec4 color=texture2D(uTexture,vUv);\n    if(color.r<.1&&color.g<.1&&color.b<.1){\n        discard;\n    }\n    gl_FragColor=color;\n}\n",particleExplodeVertexShader:"\nvec4 permute(vec4 x){return mod(((x*34.)+1.)*x,289.);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159-.85373472095314*r;}\n\nfloat snoise(vec3 v){\n    const vec2 C=vec2(1./6.,1./3.);\n    const vec4 D=vec4(0.,.5,1.,2.);\n    \n    // First corner\n    vec3 i=floor(v+dot(v,C.yyy));\n    vec3 x0=v-i+dot(i,C.xxx);\n    \n    // Other corners\n    vec3 g=step(x0.yzx,x0.xyz);\n    vec3 l=1.-g;\n    vec3 i1=min(g.xyz,l.zxy);\n    vec3 i2=max(g.xyz,l.zxy);\n    \n    //  x0 = x0 - 0. + 0.0 * C\n    vec3 x1=x0-i1+1.*C.xxx;\n    vec3 x2=x0-i2+2.*C.xxx;\n    vec3 x3=x0-1.+3.*C.xxx;\n    \n    // Permutations\n    i=mod(i,289.);\n    vec4 p=permute(permute(permute(\n                i.z+vec4(0.,i1.z,i2.z,1.))\n                +i.y+vec4(0.,i1.y,i2.y,1.))\n                +i.x+vec4(0.,i1.x,i2.x,1.));\n                \n                // Gradients\n                // ( N*N points uniformly over a square, mapped onto an octahedron.)\n                float n_=1./7.;// N=7\n                vec3 ns=n_*D.wyz-D.xzx;\n                \n                vec4 j=p-49.*floor(p*ns.z*ns.z);//  mod(p,N*N)\n                \n                vec4 x_=floor(j*ns.z);\n                vec4 y_=floor(j-7.*x_);// mod(j,N)\n                \n                vec4 x=x_*ns.x+ns.yyyy;\n                vec4 y=y_*ns.x+ns.yyyy;\n                vec4 h=1.-abs(x)-abs(y);\n                \n                vec4 b0=vec4(x.xy,y.xy);\n                vec4 b1=vec4(x.zw,y.zw);\n                \n                vec4 s0=floor(b0)*2.+1.;\n                vec4 s1=floor(b1)*2.+1.;\n                vec4 sh=-step(h,vec4(0.));\n                \n                vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\n                vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\n                \n                vec3 p0=vec3(a0.xy,h.x);\n                vec3 p1=vec3(a0.zw,h.y);\n                vec3 p2=vec3(a1.xy,h.z);\n                vec3 p3=vec3(a1.zw,h.w);\n                \n                //Normalise gradients\n                vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\n                p0*=norm.x;\n                p1*=norm.y;\n                p2*=norm.z;\n                p3*=norm.w;\n                \n                // Mix final noise value\n                vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\n                m=m*m;\n                return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),\n                dot(p2,x2),dot(p3,x3)));\n            }\n            \n            vec3 snoiseVec3(vec3 x){\n                return vec3(snoise(vec3(x)*2.-1.),\n                snoise(vec3(x.y-19.1,x.z+33.4,x.x+47.2))*2.-1.,\n                snoise(vec3(x.z+74.2,x.x-124.5,x.y+99.4)*2.-1.)\n            );\n        }\n        \n        vec3 curlNoise(vec3 p){\n            const float e=.1;\n            vec3 dx=vec3(e,0.,0.);\n            vec3 dy=vec3(0.,e,0.);\n            vec3 dz=vec3(0.,0.,e);\n            \n            vec3 p_x0=snoiseVec3(p-dx);\n            vec3 p_x1=snoiseVec3(p+dx);\n            vec3 p_y0=snoiseVec3(p-dy);\n            vec3 p_y1=snoiseVec3(p+dy);\n            vec3 p_z0=snoiseVec3(p-dz);\n            vec3 p_z1=snoiseVec3(p+dz);\n            \n            float x=p_y1.z-p_y0.z-p_z1.y+p_z0.y;\n            float y=p_z1.x-p_z0.x-p_x1.z+p_x0.z;\n            float z=p_x1.y-p_x0.y-p_y1.x+p_y0.x;\n            \n            const float divisor=1./(2.*e);\n            return normalize(vec3(x,y,z)*divisor);\n        }\n        \n        uniform float uTime;\n        uniform float uProgress;\n        varying vec2 vUv;\n        \n        void main(){\n            vec3 noise=curlNoise(vec3(position.x*.02,position.y*.008,uTime*.05));\n            vec3 distortion=vec3(position.x*2.,position.y,1.)*noise*uProgress;\n            vec3 newPos=position+distortion;\n            vec4 modelPosition=modelMatrix*vec4(newPos,1.);\n            vec4 viewPosition=viewMatrix*modelPosition;\n            vec4 projectedPosition=projectionMatrix*viewPosition;\n            gl_Position=projectedPosition;\n            gl_PointSize=2.;\n            \n            vUv=uv;\n        }\n",curlNoiseUniforms:we,curlNoise2DVertexShader:ye,curlNoiseFragmentShader:ge,config:{noiseValueTransitionScale:this.$d3.scaleLinear([0,1],[0,3]),clock:new m}}},mounted(){this.$refs.renderer;const e=this.$refs.box.mesh;e.position.set(0,0,-1e3);const n=e.geometry.getAttribute("position"),t=[],o=new u;for(let i=0,a=n.count;i<a;i++)o.setHSL(.01+i/a*.1,1,.5),o.toArray(t,3*i);e.geometry.setAttribute("customColor",new v(t,3)),setTimeout((()=>{this.dispatchActivateExplosionEffect(e)}),2e3)},methods:{async dispatchActivateExplosionEffect(e){let n=e;await this.$d3.transition("activate-explosion").duration(3e3).tween("render",(()=>e=>{n.material.uniforms.uProgress.value=this.config.noiseValueTransitionScale(e),n.material.uniforms.uTime.value=this.config.clock.getElapsedTime()})).transition("shrink-explosion").tween("render",(()=>e=>{n.material.uniforms.uProgress.value=this.config.noiseValueTransitionScale(1-e),n.material.uniforms.uTime.value=this.config.clock.getElapsedTime()})).end()}}};_e.render=function(e,n,t,o,i,a){const d=r("Camera"),p=r("PointLight"),u=r("PlaneGeometry"),m=r("ShaderMaterial"),v=r("Points"),f=r("Scene"),x=r("Renderer");return s(),c("div",null,[l(x,{ref:"renderer",antialias:"",resize:"window","orbit-ctrl":""},{default:h((()=>[l(d,{position:{z:10}}),l(f,null,{default:h((()=>[l(p,{position:{y:50,z:50,x:25}}),l(v,{onClick:a.dispatchActivateExplosionEffect,ref:"box"},{default:h((()=>[l(u,{width:1770,height:1e3,widthSegments:50,heightSegments:50}),l(m,{props:{vertexShader:i.particleExplodeVertexShader,uniforms:i.curlNoiseUniforms,fragmentShader:i.particleExplodeFragmentShader}},null,8,["props"])])),_:1},8,["onClick"])])),_:1})])),_:1},512)])};const ze={name:"data-handler-mixin",data(){return{rawData:{filteredSongList:[],filteredSongObj:{},fullRankingList:[],fullSongList:[]},dataAdapterConfig:{modelConverting:{timeline2ZoomScale:this.$d3.scaleLinear([new Date("1968-01-01"),new Date("1970-01-01")],[2e3,0]),valence2YCoordScale:this.$d3.scaleLinear([0,1],[-15,15]),dance2XCoordScale:this.$d3.scaleLinear([0,1],[-30,30]),relationPoint2CenteringDistanceScale:this.$d3.scaleLinear([1,20],[0,5])}}}},methods:{_rankingGraphPositionSimulation(e){return e.forEach((e=>{let[n,t]=e;this.$d3.forceSimulation(n).force("link",this.$d3.forceLink(t)).force("charge",this.$d3.forceManyBody().strength((e=>e.customStrength||2.3))).force("x",this.$d3.forceX()).force("y",this.$d3.forceY()).velocityDecay(.7).tick(3).stop(),n.forEach((e=>{e.position.set(e.x,e.y,e.position.z)}))})),e},_centeringPositionSimulation(e){return this.$d3.forceSimulation(e).force("charge",this.$d3.forceManyBody().strength(-10)).force("x",this.$d3.forceX()).force("y",this.$d3.forceY()).velocityDecay(.5).tick(10).stop(),e.forEach((e=>{e.position.set(e.x,e.y,e.position.z)})),e},async _initRawData(){let[e,n]=await Promise.all([this.$d3.json("./musicData/50-jahre-filtered.json"),this.$d3.json("./musicData/50-jahre.json")]),t=null==e?void 0:e.songs;Object.keys(null==e?void 0:e.songs).forEach((e=>{t[e].rankList=[]}));let o=null==n?void 0:n.entries;this.lodash.assign(this.rawData,{fullRankingList:o,filteredSongObj:t})},_aggregateSongModal(){let{filteredSongObj:e,fullRankingList:n}=this.rawData;n.forEach((n=>{let t=null==n?void 0:n.song;if(e[t]){let o=e[t];o.rankList.push(n),o.highestRank=o.highestRank?Math.min(n.rank,o.highestRank):n.rank,o.releaseDate=n.date}}));let t=[];const{timeline2ZoomScale:o,valence2YCoordScale:i,dance2XCoordScale:r,relationPoint2CenteringDistanceScale:s}=this.dataAdapterConfig.modelConverting;Object.keys(e).forEach(((n,s)=>{let c=e[n],l=new this.THREE.Vector3(r(c.dance),i(c.valence),o(new Date(c.releaseDate)));const d={position:l,x:l.x,y:l.y,index:s};t.push(a(a({},this.lodash.cloneDeep(e[n])),d))}));let c=this._centeringPositionSimulation(t);const l=this.$d3.scaleLinear([1,20],[-2.5,-4]);let d=c.map(((e,n)=>{let{rankList:t,position:i}=e,r=Math.atan2(e.valence,e.dance),c=t.map(((e,t)=>{let c=s(e.rank),d=Math.random()*Math.PI/2-Math.PI/4+r,[p,u]=[c*Math.cos(d),c*Math.sin(d)],m=new this.THREE.Vector3(i.x+p,i.y+u,o(new Date(e.date)));return a(a({},e),{id:`graph-${n}-${t}`,position:m,x:i.x,y:i.y,customStrength:l(e.rank)})})),d=[];return c.forEach(((e,n)=>{n>=1&&d.push({source:n-1,target:n})})),[[...c,a(a({},e),{fx:e.x,fy:e.y})],d]}));return[c,this._rankingGraphPositionSimulation(d)]},async initFilteredRelationMapData(){return await this._initRawData(),this._aggregateSongModal()}}},Ee=f()(((e,n,t,o,i,a)=>null));ze.render=Ee,ze.__scopeId="data-v-d9ad9f5a";const Pe=function(e,n){var t,o,i,a,r,s;void 0===n&&console.warn('THREE.customOrbitControls: The second parameter "domElement" is now mandatory.'),n===document&&console.error('THREE.customOrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=n,this.enabled=!0,this.target=new x,this.minDistance=0,this.maxDistance=2e3,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:y.ROTATE,MIDDLE:y.DOLLY,RIGHT:y.PAN},this.touches={ONE:g.ROTATE,TWO:g.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return f.phi},this.getAzimuthalAngle=function(){return f.theta},this.listenToKeyEvents=function(e){e.addEventListener("keydown",ie),this._domElementKeyEvents=e},this.saveState=function(){c.target0.copy(c.target),c.position0.copy(c.object.position),c.zoom0=c.object.zoom},this.reset=function(){c.target.copy(c.target0),c.object.position.copy(c.position0),c.object.zoom=c.zoom0,c.object.updateProjectionMatrix(),c.dispatchEvent(l),c.update(),v=m.NONE},this.update=(t=new x,o=(new w).setFromUnitVectors(e.up,new x(0,1,0)),i=o.clone().invert(),a=new x,r=new w,s=2*Math.PI,function(){b.update();var e=c.object.position;t.copy(e).sub(c.target),t.applyQuaternion(o),f.setFromVector3(t),c.autoRotate&&v===m.NONE&&R(2*Math.PI/60/60*c.autoRotateSpeed),c.enableDamping?(f.theta+=z.theta*c.dampingFactor,f.phi+=z.phi*c.dampingFactor):(f.theta+=z.theta,f.phi+=z.phi);var n=c.minAzimuthAngle,d=c.maxAzimuthAngle;return isFinite(n)&&isFinite(d)&&(n<-Math.PI?n+=s:n>Math.PI&&(n-=s),d<-Math.PI?d+=s:d>Math.PI&&(d-=s),f.theta=n<=d?Math.max(n,Math.min(d,f.theta)):f.theta>(n+d)/2?Math.max(n,f.theta):Math.min(d,f.theta)),f.phi=Math.max(c.minPolarAngle,Math.min(c.maxPolarAngle,f.phi)),f.makeSafe(),f.radius=c.maxDistance*c.scale,f.radius=Math.max(c.minDistance,Math.min(c.maxDistance,f.radius)),!0===c.enableDamping?c.target.addScaledVector(E,c.dampingFactor):c.target.add(E),t.setFromSpherical(f),t.applyQuaternion(i),e.copy(c.target).add(t),c.object.updateProjectionMatrix(),!0===c.enableDamping?(z.theta*=1-c.dampingFactor,z.phi*=1-c.dampingFactor,E.multiplyScalar(1-c.dampingFactor)):(z.set(0,0,0),E.set(0,0,0)),!!(P||a.distanceToSquared(c.object.position)>h||8*(1-r.dot(c.object.quaternion))>h)&&(c.dispatchEvent(l),a.copy(c.object.position),r.copy(c.object.quaternion),P=!1,!0)}),this.dispose=function(){c.domElement.removeEventListener("contextmenu",ce),c.domElement.removeEventListener("pointerdown",J),c.domElement.removeEventListener("wheel",oe),c.domElement.removeEventListener("touchstart",ae),c.domElement.removeEventListener("touchend",se),c.domElement.removeEventListener("touchmove",re),c.domElement.ownerDocument.removeEventListener("pointermove",ee),c.domElement.ownerDocument.removeEventListener("pointerup",ne),null!==c._domElementKeyEvents&&c._domElementKeyEvents.removeEventListener("keydown",ie)},this.scale=1;var c=this,l={type:"change"},p={type:"start"},u={type:"end"},m={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},v=m.NONE,h=1e-6,f=new _,z=new _,E=new x,P=!1,T=new d,C=new d,S=new d,L=new d,k=new d,N=new d,I=new d,O=new d,j=new d;function M(){return Math.pow(.95,c.zoomSpeed)}function R(e){z.theta-=e}function A(e){z.phi-=e}var D,V=(D=new x,function(e,n){D.setFromMatrixColumn(n,0),D.multiplyScalar(-e),E.add(D)}),U=function(){var e=new x;return function(n,t){!0===c.screenSpacePanning?e.setFromMatrixColumn(t,1):(e.setFromMatrixColumn(t,0),e.crossVectors(c.object.up,e)),e.multiplyScalar(n),E.add(e)}}(),F=function(){var e=new x;return function(n,t){var o=c.domElement;if(c.object.isPerspectiveCamera){var i=c.object.position;e.copy(i).sub(c.target);var a=e.length();a*=Math.tan(c.object.fov/2*Math.PI/180),V(2*n*a/o.clientHeight,c.object.matrix),U(2*t*a/o.clientHeight,c.object.matrix)}else c.object.isOrthographicCamera?(V(n*(c.object.right-c.object.left)/c.object.zoom/o.clientWidth,c.object.matrix),U(t*(c.object.top-c.object.bottom)/c.object.zoom/o.clientHeight,c.object.matrix)):(console.warn("WARNING: customOrbitControls.js encountered an unknown camera type - pan disabled."),c.enablePan=!1)}}();function $(e){c.object.isPerspectiveCamera?H(c.scale/e):c.object.isOrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom*e)),c.object.updateProjectionMatrix(),P=!0):(console.warn("WARNING: customOrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),c.enableZoom=!1)}function H(e){if(e>1||e<0)return;const n={scale:c.scale};return new b.Tween(n).to({scale:e},800).easing(b.Easing.Cubic.Out).onUpdate((()=>{c.scale=n.scale})).start()}function Y(e){c.object.isPerspectiveCamera?H(c.scale*e):c.object.isOrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom/e)),c.object.updateProjectionMatrix(),P=!0):(console.warn("WARNING: customOrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),c.enableZoom=!1)}function G(e){T.set(e.clientX,e.clientY)}function B(e){L.set(e.clientX,e.clientY)}function X(e){if(1==e.touches.length)T.set(e.touches[0].pageX,e.touches[0].pageY);else{var n=.5*(e.touches[0].pageX+e.touches[1].pageX),t=.5*(e.touches[0].pageY+e.touches[1].pageY);T.set(n,t)}}function Z(e){if(1==e.touches.length)L.set(e.touches[0].pageX,e.touches[0].pageY);else{var n=.5*(e.touches[0].pageX+e.touches[1].pageX),t=.5*(e.touches[0].pageY+e.touches[1].pageY);L.set(n,t)}}function q(e){var n=e.touches[0].pageX-e.touches[1].pageX,t=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(n*n+t*t);I.set(0,o)}function W(e){if(1==e.touches.length)C.set(e.touches[0].pageX,e.touches[0].pageY);else{var n=.5*(e.touches[0].pageX+e.touches[1].pageX),t=.5*(e.touches[0].pageY+e.touches[1].pageY);C.set(n,t)}S.subVectors(C,T).multiplyScalar(c.rotateSpeed);var o=c.domElement;R(2*Math.PI*S.x/o.clientHeight),A(2*Math.PI*S.y/o.clientHeight),T.copy(C)}function K(e){if(1==e.touches.length)k.set(e.touches[0].pageX,e.touches[0].pageY);else{var n=.5*(e.touches[0].pageX+e.touches[1].pageX),t=.5*(e.touches[0].pageY+e.touches[1].pageY);k.set(n,t)}N.subVectors(k,L).multiplyScalar(c.panSpeed),F(N.x,N.y),L.copy(k)}function Q(e){var n=e.touches[0].pageX-e.touches[1].pageX,t=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(n*n+t*t);O.set(0,o),j.set(0,Math.pow(O.y/I.y,c.zoomSpeed)),$(j.y),I.copy(O)}function J(e){if(!1!==c.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){var n;switch(e.preventDefault(),c.domElement.focus?c.domElement.focus():window.focus(),e.button){case 0:n=c.mouseButtons.LEFT;break;case 1:n=c.mouseButtons.MIDDLE;break;case 2:n=c.mouseButtons.RIGHT;break;default:n=-1}switch(n){case y.DOLLY:if(!1===c.enableZoom)return;!function(e){I.set(e.clientX,e.clientY)}(e),v=m.DOLLY;break;case y.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===c.enablePan)return;B(e),v=m.PAN}else{if(!1===c.enableRotate)return;G(e),v=m.ROTATE}break;case y.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===c.enableRotate)return;G(e),v=m.ROTATE}else{if(!1===c.enablePan)return;B(e),v=m.PAN}break;default:v=m.NONE}v!==m.NONE&&(c.domElement.ownerDocument.addEventListener("pointermove",ee),c.domElement.ownerDocument.addEventListener("pointerup",ne),c.dispatchEvent(p))}(e)}}function ee(e){if(!1!==c.enabled)switch(e.pointerType){case"mouse":te(e);case"pen":te(e)}}function ne(e){switch(e.pointerType){case"mouse":case"pen":!function(e){if(c.domElement.ownerDocument.removeEventListener("pointermove",ee),c.domElement.ownerDocument.removeEventListener("pointerup",ne),!1===c.enabled)return;c.dispatchEvent(u),v=m.NONE}()}}function te(e){if(!1!==c.enabled)switch(e.preventDefault(),v){case m.ROTATE:if(!1===c.enableRotate)return;!function(e){C.set(e.clientX,e.clientY),S.subVectors(C,T).multiplyScalar(c.rotateSpeed);var n=c.domElement;R(2*Math.PI*S.x/n.clientHeight),A(2*Math.PI*S.y/n.clientHeight),T.copy(C),c.update()}(e);break;case m.DOLLY:if(!1===c.enableZoom)return;!function(e){O.set(e.clientX,e.clientY),j.subVectors(O,I),j.y>0?$(M()):j.y<0&&Y(M()),I.copy(O),c.update()}(e);break;case m.PAN:if(!1===c.enablePan)return;!function(e){k.set(e.clientX,e.clientY),N.subVectors(k,L).multiplyScalar(c.panSpeed),F(N.x,N.y),L.copy(k),c.update()}(e)}}function oe(e){!1===c.enabled||!1===c.enableZoom||v!==m.NONE&&v!==m.ROTATE||(e.preventDefault(),c.dispatchEvent(p),function(e){e.deltaY<0?Y(M()):e.deltaY>0&&$(M()),c.update()}(e),c.dispatchEvent(u))}function ie(e){!1!==c.enabled&&!1!==c.enablePan&&function(e){var n=!1;switch(e.code){case c.keys.UP:F(0,c.keyPanSpeed),n=!0;break;case c.keys.BOTTOM:F(0,-c.keyPanSpeed),n=!0;break;case c.keys.LEFT:F(c.keyPanSpeed,0),n=!0;break;case c.keys.RIGHT:F(-c.keyPanSpeed,0),n=!0}n&&(e.preventDefault(),c.update())}(e)}function ae(e){if(!1!==c.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(c.touches.ONE){case g.ROTATE:if(!1===c.enableRotate)return;X(e),v=m.TOUCH_ROTATE;break;case g.PAN:if(!1===c.enablePan)return;Z(e),v=m.TOUCH_PAN;break;default:v=m.NONE}break;case 2:switch(c.touches.TWO){case g.DOLLY_PAN:if(!1===c.enableZoom&&!1===c.enablePan)return;!function(e){c.enableZoom&&q(e),c.enablePan&&Z(e)}(e),v=m.TOUCH_DOLLY_PAN;break;case g.DOLLY_ROTATE:if(!1===c.enableZoom&&!1===c.enableRotate)return;!function(e){c.enableZoom&&q(e),c.enableRotate&&X(e)}(e),v=m.TOUCH_DOLLY_ROTATE;break;default:v=m.NONE}break;default:v=m.NONE}v!==m.NONE&&c.dispatchEvent(p)}}function re(e){if(!1!==c.enabled)switch(e.preventDefault(),v){case m.TOUCH_ROTATE:if(!1===c.enableRotate)return;W(e),c.update();break;case m.TOUCH_PAN:if(!1===c.enablePan)return;K(e),c.update();break;case m.TOUCH_DOLLY_PAN:if(!1===c.enableZoom&&!1===c.enablePan)return;!function(e){c.enableZoom&&Q(e),c.enablePan&&K(e)}(e),c.update();break;case m.TOUCH_DOLLY_ROTATE:if(!1===c.enableZoom&&!1===c.enableRotate)return;!function(e){c.enableZoom&&Q(e),c.enableRotate&&W(e)}(e),c.update();break;default:v=m.NONE}}function se(e){!1!==c.enabled&&(c.dispatchEvent(u),v=m.NONE)}function ce(e){!1!==c.enabled&&e.preventDefault()}c.domElement.addEventListener("contextmenu",ce),c.domElement.addEventListener("pointerdown",J),c.domElement.addEventListener("wheel",oe),c.domElement.addEventListener("touchstart",ae),c.domElement.addEventListener("touchend",se),c.domElement.addEventListener("touchmove",re),this.update()};(Pe.prototype=Object.create(z.prototype)).constructor=Pe;var Te=function(e,n){Pe.call(this,e,n),this.screenSpacePanning=!1,this.mouseButtons.LEFT=y.PAN,this.mouseButtons.RIGHT=y.ROTATE,this.touches.ONE=g.PAN,this.touches.TWO=g.DOLLY_ROTATE};(Te.prototype=Object.create(z.prototype)).constructor=Te;const Ce={name:"cameraTester",mixins:[ze],data(){return{config:{viewPortSpinRatio:this.$d3.scaleLinear([-1,1],[0,1]),rank2spriteScaleRatio:this.$d3.scaleLinear([0,1,20],[2,1.5,.6]),backgroundLoader:"black",fontLoader:null,orbitControlConfig:{enableZoom:!0,zoomSpeed:3,enablePan:!1,enableRotate:!1,minDistance:0,maxDistance:2e3,enableDamping:!0,dampingFactor:.25}},control:{orbitControlInstance:null,rayCasterInstance:null},interact:{mousePosition:new x,cameraPosition:new x(0,0,2e3),cameraLookatPosition:new x(0,0,0),zoomPos:2e3,zoom:500,clickEffect:{activatedNodeInstanceList:null,activatedLineTweenList:null}},adaptedSongList:[]}},computed:{dynamicMousePosition(){}},methods:{initOrbitControl(){let{renderer:e}=this.$refs;const n=new Pe(e.camera,e.renderer.domElement);return this.config.orbitControlConfig instanceof Object&&Object.entries(this.config.orbitControlConfig).forEach((([e,t])=>{n[e]=t})),e.onBeforeRender((()=>{n.update()})),n},renderYearText(){let e=[1500,500];const n=new this.THREE.MeshBasicMaterial({transparent:!0,opacity:.1}),t=this.$refs.sceneInstance;[1968,1969].forEach(((o,i)=>{const a=new this.THREE.TextGeometry(o+"",{size:40,height:.1,font:this.config.fontLoader});a.computeBoundingBox();const r=-.5*(a.boundingBox.max.x-a.boundingBox.min.x),s=-.5*(a.boundingBox.max.y-a.boundingBox.min.y);let c=new this.THREE.Mesh(a,n);c.renderOrder=10,c.position.set(r,s,e[i]),t.add(c)}))},renderRelationGraph(e){const n=this.$refs.sceneInstance;e.forEach((e=>{const t=new this.THREE.Group;let[o,i]=e;o.pop(),this.renderLinkList(i,t),this.renderNodeList(o,"white",t),n.add(t)}))},renderLinkList(e,n){const t=new this.THREE.LineBasicMaterial({opacity:.1,transparent:!0,depthWrite:!1});e.forEach((e=>{const o=[e.source.position,e.target.position],i=(new E).setFromPoints(o);let a=new P(i,t);this.$refs.renderer.three.addIntersectObject(a),n.add(a)}))},renderNodeList(e,n="yellow",t){const{sceneInstance:o,renderer:i}=this.$refs,a=new T({map:(new p).load("./musicData/circle.png"),color:n}),r=new this.THREE.Sprite(a);e.forEach((e=>{let n=r.clone(),a=e.rank||0;n.scale.setScalar(this.config.rank2spriteScaleRatio(a)),n.userData=this.lodash.cloneDeep(e),t?(t.add(n),i.three.addIntersectObject(n)):o.add(n),n.position.copy(e.position)}))},renderNodeCardList(e){const n=this.$refs.sceneInstance;new this.THREE.SpriteMaterial,e.forEach((e=>{let t=this.drawCardCanvas(e),o=new T({map:t,color:"#ff649f"}),i=new C(o);i.position.copy(e.position),n.add(i),i.scale.set(21,12,1)}))},generateNodeCanvasTexture(e){const n=document.createElement("canvas");let t=n.getContext("2d");return n.width=100,n.height=100,t.beginPath(),t.arc(50,50,50,0,2*Math.PI,!1),t.fillStyle="white",t.fill(),t.fillStyle="black",t.font="bold 56px Avenir,Helvetica",t.fillText(null==e?void 0:e.rank,32.5,65),new S(n)},drawCardCanvas(e){const n=document.createElement("canvas");let t=n.getContext("2d");return n.width=700,n.height=400,t.fillStyle="white",t.textBaseline="top",t.font=" bold 56px Avenir,Helvetica",t.fillText(e.artist,0,0),t.font="80px Avenir,Helvetica",t.fillText(e.title,0,80),t.beginPath(),t.arc(50,220,50,0,2*Math.PI,!1),t.fillStyle="white",t.fill(),t.fillStyle="black",t.font="bold 56px Avenir,Helvetica",t.fillText(e.highestRank,32.5,195),t.font="56px Avenir,Helvetica",t.fillStyle="white",t.fillText(this.dayjs(e.releaseDate).format("LL"),120,195),new S(n)},initLoader(){this.config.fontLoader=(new L).load("fonts/helvetiker_bold.typeface.json");let e=new Promise((e=>{(new L).load("fonts/helvetiker_regular.typeface.json",(n=>{this.config.fontLoader=n,e()}))})),n=new Promise((e=>{(new p).load("./backgroundTexture.png",(n=>{n.wrapT=k,this.config.backgroundLoader=n,e()}))}));return Promise.all([e,n])},adjustCameraLookAtPosition(){let{renderer:e}=this.$refs,{x:n,y:t}=e.three.pointer.position;this.interact.cameraLookatPosition.x=n,this.interact.cameraLookatPosition.y=-t},activateGraphLinkEffect:e=>e.map((e=>{const n={opacity:.1};return new b.Tween(n).to({opacity:1},400).onUpdate((()=>{e.material.opacity=n.opacity})).repeat(1/0).yoyo(!0).start()})),activateGraphNodeEffect(e){const n=this.$refs.sceneInstance;let t=[];return e.map((e=>{let{userData:n}=e,o=this.generateNodeCanvasTexture(n),i=new T({map:o}),a=new C(i);t.push(a),a.position.copy(n.position);const r={x:.5,y:.5,z:.5},s=new b.Tween(r).easing(b.Easing.Cubic.Out).to({x:3,y:3},400).onUpdate((()=>{a.scale.set(r.x,r.y,r.z)})),c=new b.Tween(r).easing(b.Easing.Cubic.Out).to({x:2,y:2},400).onUpdate((()=>{a.scale.set(r.x,r.y,r.z)}));return s.chain(c),{tweenExpand:s,instance:a}})).forEach((({tweenExpand:e,instance:t},o)=>{n.add(t),e.delay(150*o).start()})),t},_checkNodeInactivatedNodeInstanceList(e){let n=!1,{activatedNodeInstanceList:t}=this.interact.clickEffect;return t&&e&&(n=t.find((n=>e===n))),n},deactivateClickEffects(){let{activatedNodeInstanceList:e,activatedLineTweenList:n}=this.interact.clickEffect;e&&n&&(e.forEach((e=>{e.removeFromParent()})),n.forEach((e=>{b.remove(e)})),this.lodash.assign(this.interact.clickEffect,{activatedNodeInstanceList:null,activatedLineTweenList:null}))},dispatchRelationExpansion(){var e;let{pointer:n}=this.$refs.renderer.three;if(this.control.rayCasterInstance){let t=this.control.rayCasterInstance.intersect(n.positionN,n.intersectObjects,!1);if(t.length>0){let n=t[0].object,o=(null==n?void 0:n.parent)instanceof this.THREE.Group;if(!this._checkNodeInactivatedNodeInstanceList(n)&&(this.deactivateClickEffects(),o)){let t=[],o=[];(null==(e=null==n?void 0:n.parent)?void 0:e.children).forEach((e=>{e instanceof P?o.push(e):e instanceof C&&t.push(e)}));let i=this.activateGraphLinkEffect(o),a=this.activateGraphNodeEffect(t);this.lodash.assign(this.interact.clickEffect,{activatedNodeInstanceList:a,activatedLineTweenList:i})}}}}},async mounted(){var e;await this.initLoader(),this.control.orbitControlInstance=this.initOrbitControl(),this.control.rayCasterInstance=new N({camera:null==(e=this.$refs.camera)?void 0:e.camera});let[n,t]=await this.initFilteredRelationMapData();this.renderNodeCardList(n),this.renderRelationGraph(t),this.renderYearText(),window.addEventListener("mousemove",this.adjustCameraLookAtPosition),window.addEventListener("click",this.dispatchRelationExpansion)}},Se=f(),Le=Se(((e,n,t,o,i,a)=>{const d=r("Camera"),p=r("Scene"),u=r("Renderer");return s(),c(u,{ref:"renderer",antialias:"",resize:"window",pointer:""},{default:Se((()=>[l(d,{far:550,fov:50,aspect:1,ref:"camera",position:i.interact.cameraPosition,lookAt:i.interact.cameraLookatPosition},null,8,["position","lookAt"]),l(p,{ref:"sceneInstance",background:i.config.backgroundLoader},null,8,["background"])])),_:1},512)}));async function ke(e,n){const t=Object.freeze({HOVER:1,ACTIVATE:2,INITIAL:4,UPDATE:8});await(async()=>new Promise((e=>{(new L).load("fonts/gentilis_regular.typeface.json",(n=>{e()}))})))();return{createTextSelectorInstance:(o,i,a,r,s=!1)=>{const c=new I;let l=O("");c.position.set(o,i,0);let d={x:o,y:i,w:a,h:r},p=((e,n="click to input something")=>{const t=document.createElement("canvas");let o=t.getContext("2d");return t.width=10*e.w,t.height=10*e.h,o.fillStyle="black",o.textBaseline="top",o.font="16px Avenir,Helvetica",o.fillText(n,8,t.height/2-8),t})(d),u=new S(p),m={geometry:new j(a,r),material:new M({transparent:!0,opacity:.3,map:u,side:R})},v=new A(m.geometry,m.material);s&&v.rotateY(Math.PI);let h=O(t.INITIAL);const f=D((()=>Object.freeze({[t.HOVER]:"green",[t.ACTIVATE]:"red",[t.INITIAL]:"white",[t.UPDATE]:"black"})[h.value]||"white"));return V((()=>{((e,n,t,o,i)=>{let a=e.getContext("2d");a&&(a.clearRect(0,0,10*o.w,10*o.h),a.fillStyle="black",a.textBaseline="top",a.font="16px Avenir,Helvetica",a.textAlign="center",a.textBaseline="middle",a.fillText(t,e.width/2,e.height/2),a.lineWidth=5,a.strokeStyle=i,a.strokeRect(0,0,e.width,e.height),n.needsUpdate=!0)})(p,u,l.value||"click to input something",d,f.value)})),n.set(c,{focus:()=>{h.value=t.HOVER},clear:()=>{h.value=t.INITIAL},activate:()=>(h.value=t.ACTIVATE,l.value),update:e=>{l.value=e}}),c.add(v),e.add(c),v}}}Ce.render=Le,Ce.__scopeId="data-v-88f8b8e4";const Ne={setup(){const e=U(new x(0,0,-10)),n=O(null),t=O(null),o=O(null),i=O(""),a=O(null),r=U({x:0,y:0,z:0}),s=U({x:0,y:0,z:10}),c=D((()=>"edit"===a.value)),l=D((()=>"display"===a.value));let d=null,u=null,m=null;const{plane:v,createPlaneInstance:h,instanceMap:f}=function(){const e=O(null),n=[],t=new WeakMap,o=[[-13.4,13.4,21,2.2],[-13.4,11.4,21,2.2],[-13.4,9.4,21,2.2],[-13.4,7.4,21,2.2],[21.4,13.4,21,2.2],[21.4,11.4,21,2.2],[21.4,9.4,21,2.2],[21.4,7.4,21,2.2],[-7,5.8,58,2.2,!0],[-7,7.8,58,2.2,!0],[-7,9.8,58,2.2,!0],[-7,11.8,58,2.2,!0],[-7,.7,58,2.2,!0],[-7,-1.3,58,2.2,!0],[-7,-3.3,58,2.2,!0],[-7,-5.3,58,2.2,!0],[-7,-10.5,58,2.2,!0],[-7,-12.5,58,2.2,!0],[-7,-14.5,58,2.2,!0],[-7,-16.5,58,2.2,!0]],i=e=>new Promise(((n,t)=>{(new p).load(e,(e=>{n(e)}),void 0,(e=>{t(e)}))}));return{plane:e,createPlaneInstance:async e=>{let a=new j(108,80),[r,s]=await Promise.all([i("./cbill/bill-back.png"),i("./cbill/bill-front.png")]),c=new M({map:r,side:R,depthWrite:!1}),l=new M({map:s,side:R,depthWrite:!1}),d=new A(a.clone(),l),p=new A(a.clone(),c);d.position.set(0,0,0),p.position.set(0,0,0),p.geometry.rotateY(Math.PI),e.add(d),e.add(p);const u=await ke(e,t);return o.forEach((e=>{n.push(u.createTextSelectorInstance.apply(u,e))})),n},instanceMap:t}}();F(i,(e=>{m&&m.update(e)})),F(a,((e,n)=>{if(e!==n)switch(e){case"display":break;case"edit":y()}}));const y=()=>{r.y=r.y%(2*Math.PI);return[new b.Tween(r).to({x:0,y:0,z:0},500).start(),new b.Tween(t.value.three.camera.position).to({x:0,y:0,z:10},500).start()]},g=()=>{var e;u&&c.value&&(m=u,null==(e=null==o?void 0:o.value)||e.focus(),i.value=m.activate())},w=()=>{var e;let{pointer:n}=null==(e=t.value)?void 0:e.three;if(d&&c.value){let e=d.intersect(n.positionN,n.intersectObjects,!1);if(e.length>0){let n=e[0].object;n!==u&&(u&&u.clear(),m&&(m.clear(),m=null),u=f.get(n.parent),null==u||u.focus())}else u&&(u.clear(),u=null)}};return $((()=>{h(n.value).then((e=>{var n,o;a.value="display",e.forEach((e=>{t.value.three.addIntersectObject(e)})),null==(o=null==(n=null==t?void 0:t.value)?void 0:n.three)||o.cameraCtrl.saveState(),t.value.onBeforeRender((()=>{b.update(),l.value&&(r.y+=.005)}))})),d=new N({camera:t.value.camera}),window.addEventListener("mousemove",w),window.addEventListener("click",g)})),{plane:v,renderer:t,createPlaneInstance:h,cbillGroup:n,rotateCntl:r,userInput:i,hiddenInput:o,toggleMode:(e,n)=>{e.preventDefault(),a.value=n},orbitTarget:e,typeControl:a,cameraPosCntl:s}}},Ie=f();H("data-v-6da58860");const Oe={class:"container"},je={class:"control-block"},Me={key:0},Re={key:1,class:"control-block"};Y();const Ae=Ie(((e,n,t,o,i,a)=>{const d=r("Camera"),p=r("AmbientLight"),u=r("Group"),m=r("Scene"),v=r("Renderer");return s(),c("div",Oe,[l("div",je,[G(l("input",{ref:"hiddenInput","onUpdate:modelValue":n[1]||(n[1]=e=>o.userInput=e),class:"hidden-input"},null,512),[[B,o.userInput]]),o.typeControl?(s(),c("div",Re,[l("a",{href:"#",onClick:n[2]||(n[2]=e=>o.toggleMode(e,"edit"))},"edit mode"),l("a",{href:"#",onClick:n[3]||(n[3]=e=>o.toggleMode(e,"display"))},"display mode")])):(s(),c("div",Me," loading texture image data... "))]),l(v,{ref:"renderer","orbit-ctrl":{target:o.orbitTarget},antialias:"",pointer:"",resize:"window"},{default:Ie((()=>[l(d,{ref:"camera",lookAt:o.orbitTarget,position:o.cameraPosCntl},null,8,["lookAt","position"]),l(m,{ref:"scene"},{default:Ie((()=>[l(p),l(u,{ref:"cbillGroup",position:o.orbitTarget,rotation:o.rotateCntl,scale:{x:.25,y:.25,z:.25}},null,8,["position","rotation","scale"])])),_:1},512)])),_:1},8,["orbit-ctrl"])])}));function De(){const e=X([0,15],[5,12]),n=X([0,15],[1,2]),t=(e=[],n=5)=>(new x).setFromSphericalCoords(n,Z.degToRad(90-e[1]),Z.degToRad(180+e[0])),o=(n,t)=>{let o=e(n.distanceTo(t)),[i,a]=[(new _).setFromVector3(n),(new _).setFromVector3(t)],r=Math.abs(i.theta-a.theta)>Math.PI,s=a.theta;return r&&(s=s<0?2*Math.PI+s:-2*Math.PI+s),(new x).setFromSphericalCoords(o,(i.phi+a.phi)/2,(i.theta+s)/2)},i=e=>{let t=[];return e.forEach(((e,o)=>{const[,i]=e;let a=i[0],r=i[i.length-1];t.push({impactPosition:a,impactMaxRadius:n(a.distanceTo(r)),impactRatio:0},{impactPosition:r,impactMaxRadius:n(a.distanceTo(r)),impactRatio:0})})),[t.map(((e,n)=>new b.Tween(e).to({impactRatio:1},Z.randInt(1e3,1500)).onComplete((()=>{e.impactRatio=0})))),t]},a=(e,n=[],t=[])=>n.map(((n,o)=>{const[i,a,r]=n;return a[0].equals(a[a.length-1])?((e,n,t,o)=>{let i=new I,a=(new _).setFromVector3(t[0]),r=a.clone();r.radius=4.3;let s=a.clone();s.radius=.5;let c=a.clone();c.radius=.6;let l=(new x).setFromSpherical(c),d=(new x).setFromSpherical(s);const p=new W;p.setPoints([new x(0,0,0),d]);const u=new K({color:"blue",lineWidth:.03,useAlphaMap:0}),m=(new E).setFromPoints([l]),v=new Q({size:.2}),h=new A(p,u);h.userData=n;const f=new J(m,v);i.add(h,f),i.position.set((new x).setFromSpherical(r)),e.add(i);const y=new b.Tween((new x).setFromSpherical(a)).delay(5e3).to((new x).setFromSpherical(r),3e3).onStart((()=>{h.userData.enableDisplayCommit=!1})).onUpdate((e=>{i.position.set(e.x,e.y,e.z)})),g=new b.Tween((new x).setFromSpherical(r)).delay(2e3*Math.random()).onStart((()=>{o&&o.start()})).to((new x).setFromSpherical(a),3e3).onUpdate((e=>{i.position.set(e.x,e.y,e.z)})).onComplete((()=>{h.userData.enableDisplayCommit=!0}));return g.chain(y),g})(e,r,a,t[2*o]):((e,n,t,o,i)=>{e.add(n);let a={counter:0},r=new b.Tween({counter:0}).delay(5e3).easing(b.Easing.Cubic.InOut).to({counter:t.length},2500).onStart((()=>{n.userData.enableDisplayCommit=!1})).onUpdate((e=>{let o=t.slice(e.counter-1,t.length);n.geometry.setPoints(o)})),s=new b.Tween(a).delay(2e3*Math.random()).onStart((()=>{o&&o.start()})).to({counter:t.length},2500).onUpdate((()=>{let e=t.slice(0,a.counter);n.geometry.setPoints(e)})).onComplete((()=>{n.userData.enableDisplayCommit=!0,i.start()}));return s.chain(r),s})(e,i,a,t[2*o],t[2*o+1])}));return{generateCommitTweenList:async(e,n=O([]))=>{let r=await(async()=>(await ee("./gitIndex/github-index-0929.json")).map((e=>{let{gm:n,gop:i}=e,a=[i.lon,i.lat],r=[n.lon,n.lat],[s,c]=[t(a),t(r)];return[s,o(s,c),c,e]})).sort(((e,n)=>{let[t,o]=[e[0],n[1]];return Math.abs(t.x)>Math.abs(o.x)})).map((e=>{let[n,t,o,i]=e;const a=new q(n,t,o).getPoints(100),r=new W;r.setPoints([]);const s=new K({color:"lightGreen",lineWidth:.05,useAlphaMap:0}),c=new A(r,s);return c.userData=i,[c,a,i]})))(),[s,c]=i(r),l=a(e,r,s);return n.value=c,l}}}function Ve(){const e=new Image,[n,t]=[360,181],o=[],i=O([]);let{generateCommitTweenList:a}=De();return{initCompositeGlobePlane:async r=>{await new Promise((n=>{e.src="./gitIndex/globalMap.png",e.onload=()=>{n()}}));let s=document.createElement("canvas");s.width=n,s.height=t;let c=s.getContext("2d"),l=new ne;c.drawImage(e,0,0,n,t),c.fillStyle="white";let d=c.getImageData(0,0,n,t).data;for(let e=0;e<t;e++)for(let t=0;t<n;t++){if(d[4*(n*e+t)+3]>128){let n=(new x).setFromSphericalCoords(5,Z.degToRad(e),Z.degToRad(t)),i=n.toArray();l.lookAt(n),l.updateMatrix();let a=.03,r=new j(a,a);r.applyMatrix4(l.matrix),r.translate.apply(r,i);let s=new Array(4).fill(i).flat();r.setAttribute("center",new v(s,3)),o.push(r)}}await(async e=>{let n=0,t=await a(e,i);oe((()=>{n=n>=t.length?n%t.length+3:n+3,t.slice(n-3,n).forEach((e=>e.start()))}),1e3)})(r);let p=te(o,!0),u=new M({color:6697898,onBeforeCompile:e=>{let n=i.value.length;e.uniforms.impacts={value:i.value},e.vertexShader=`\n      \tstruct impact {\n          vec3 impactPosition;\n          float impactMaxRadius;\n          float impactRatio;\n        };\n      \tuniform impact impacts[${i.value.length}];\n\n        attribute vec3 center;\n        attribute float scale;\n\n        varying float vFinalStep;\n\n        ${e.vertexShader}\n      `.replace("#include <begin_vertex>",`#include <begin_vertex>\n        float finalStep = 0.0;\n        for (int i = 0; i < ${n};i++){\n\n          float dist = distance(center, impacts[i].impactPosition);\n          float curRadius = impacts[i].impactMaxRadius * impacts[i].impactRatio;\n          float sstep = smoothstep(0., curRadius, dist) - smoothstep(curRadius - ( 0.25 * impacts[i].impactRatio ), curRadius, dist);\n          sstep *= 1. - impacts[i].impactRatio;\n          finalStep += sstep;\n\n        }\n        finalStep = clamp(finalStep, 0., 1.);\n        vFinalStep = finalStep;\n        transformed = (position - center) * mix(1., scale * 1.25, finalStep) + center; // scale on wave\n        transformed += normal * finalStep * 0.125; // lift on wave\n        `),e.fragmentShader=`\n        varying float vFinalStep;\n        ${e.fragmentShader}\n        `.replace("vec4 diffuseColor = vec4( diffuse, opacity );","\n        if (length(vUv - 0.5) > 0.5) discard; // make points circular\n        vec3 grad = mix(vec3(1, 0.75, 1), vec3(0, 1, 1), clamp(length(vUv - 0.5) / 0.5, 0., 1.)); // circular gradient\n        vec3 col = mix(diffuse, grad, vFinalStep); // color on wave\n        vec4 diffuseColor = vec4( col , opacity ); \n        ")}});u.defines={USE_UV:""};const m=new A(p,u);return r.add(m),m}}}function Ue(){let e=(()=>{const e=document.createElement("canvas");return e.width=670,e.height=150,e})(),n=new S(e),t=new C(new T({map:n,depthTest:!1,depthWrite:!1,fog:!1}));t.scale.set(6.7,1.5,1),t.renderOrder=-1;return{toggleCommitInfoPlane:(o=!0,i="",a=new x)=>{t.visible=o,t.position.set(a.x,a.y,6),i&&o&&((t={})=>{let o=e.getContext("2d");o&&(o.clearRect(0,0,670,150),o.fillStyle="rgba(22,22,22,0.5)",o.fillRect(0,0,670,150),o.fillStyle="white",o.font="24px Avenir,Helvetica",o.fillText(`#${t.pr}\t${t.nwo}`,20,40),o.fillText(`${t.l}\t* Opened in ${t.uol}`,20,80),o.fillText(`merged at ${t.ma} in ${t.uml}`,20,120),o.lineWidth=5,n.needsUpdate=!0,console.dir("canvas updated"))})(i)},initCommitInfoPlane:e=>{e.add(t)}}}Ne.render=Ae,Ne.__scopeId="data-v-6da58860";const Fe={name:"gitIndex",setup(){let e=null,n=O(.001);const{initCompositeGlobePlane:t}=Ve(),{initCommitInfoPlane:o,toggleCommitInfoPlane:i}=Ue(),a=O(null),r=O(null),s=O(null),c=U({x:0,y:Math.PI/3,z:0}),l=()=>{var t,o;let{pointer:a}=null==(t=s.value)?void 0:t.three,r=e.intersect(a.positionN,a.intersectObjects,!1);if(r.length>0){let e=r[0].object;(null==(o=null==e?void 0:e.userData)?void 0:o.enableDisplayCommit)&&(n.value=0,i(!0,null==e?void 0:e.userData,a.positionV3))}else n.value=.001,i(!1)};return $((async()=>{var i,d,p,u;o(a.value);let m=null==(d=null==(i=r.value)?void 0:i.o3d)?void 0:d.children[0],v=await t(r.value);null==(u=null==(p=r.value)?void 0:p.o3d)||u.children.forEach((e=>{e.children.length>0||s.value.three.addIntersectObject(e)})),s.value.three.removeIntersectObject(m),s.value.three.removeIntersectObject(v),s.value.onBeforeRender((()=>{b.update(),c.y+=n.value})),e=new N({camera:s.value.camera}),window.addEventListener("mousemove",l)})),{scene:a,renderer:s,parentGroup:r,rotateCntl:c}}},$e=f(),He=$e(((e,n,t,o,i,a)=>{const d=r("Camera"),p=r("PointLight"),u=r("SphereGeometry"),m=r("PhongMaterial"),v=r("Mesh"),h=r("Group"),f=r("Scene"),x=r("RenderPass"),y=r("FXAAPass"),g=r("UnrealBloomPass"),w=r("EffectComposer"),b=r("Renderer");return s(),c("div",null,[l(b,{ref:"renderer","orbit-ctrl":{enableRotate:!1},pointer:"",resize:"window"},{default:$e((()=>[l(d,{far:20,fov:50,position:{x:0,y:5,z:12}}),l(f,{ref:"scene"},{default:$e((()=>[l(p,{ref:"light1",intensity:.3,position:{x:-35,y:35,z:-10},color:"#0E09DC"},null,8,["intensity"]),l(p,{ref:"light2",intensity:.3,position:{x:-25,y:25,z:-10},color:"#1CD1E1"},null,8,["intensity"]),l(p,{ref:"light3",intensity:.3,position:{x:-15,y:15,z:-10},color:"#18C02C"},null,8,["intensity"]),l(p,{ref:"light4",intensity:.3,position:{x:-5,y:5,z:-10},color:"#ee3bcf"},null,8,["intensity"]),l(p,{ref:"light5",intensity:1,position:{x:-9,y:11,z:-15},color:"white"},null,512),l(h,{ref:"parentGroup",rotation:o.rotateCntl},{default:$e((()=>[l(v,null,{default:$e((()=>[l(u,{heightSegments:25,radius:5,widthSegments:25}),l(m,{props:{emissive:"#043a8a",emissiveIntensity:.3},color:"white"},null,8,["props"])])),_:1})])),_:1},8,["rotation"])])),_:1},512),l(w,null,{default:$e((()=>[l(x),l(y),l(g,{strength:.8})])),_:1})])),_:1},512)])}));Fe.render=He,Fe.__scopeId="data-v-208bc0b2";const Ye="\nuniform vec3 color;\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n  gl_FragColor = vec4( color * vColor, 1.0 );\n  \n}\n",Ge="\nvec4 permute(vec4 x){return mod(((x*34.)+1.)*x,289.);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159-.85373472095314*r;}\n\nfloat snoise(vec3 v){\n    const vec2 C=vec2(1./6.,1./3.);\n    const vec4 D=vec4(0.,.5,1.,2.);\n    \n    // First corner\n    vec3 i=floor(v+dot(v,C.yyy));\n    vec3 x0=v-i+dot(i,C.xxx);\n    \n    // Other corners\n    vec3 g=step(x0.yzx,x0.xyz);\n    vec3 l=1.-g;\n    vec3 i1=min(g.xyz,l.zxy);\n    vec3 i2=max(g.xyz,l.zxy);\n    \n    //  x0 = x0 - 0. + 0.0 * C\n    vec3 x1=x0-i1+1.*C.xxx;\n    vec3 x2=x0-i2+2.*C.xxx;\n    vec3 x3=x0-1.+3.*C.xxx;\n    \n    // Permutations\n    i=mod(i,289.);\n    vec4 p=permute(permute(permute(\n        i.z+vec4(0.,i1.z,i2.z,1.))\n        +i.y+vec4(0.,i1.y,i2.y,1.))\n        +i.x+vec4(0.,i1.x,i2.x,1.));\n        \n        // Gradients\n        // ( N*N points uniformly over a square, mapped onto an octahedron.)\n        float n_=1./7.;// N=7\n        vec3 ns=n_*D.wyz-D.xzx;\n        \n        vec4 j=p-49.*floor(p*ns.z*ns.z);//  mod(p,N*N)\n        \n        vec4 x_=floor(j*ns.z);\n        vec4 y_=floor(j-7.*x_);// mod(j,N)\n        \n        vec4 x=x_*ns.x+ns.yyyy;\n        vec4 y=y_*ns.x+ns.yyyy;\n        vec4 h=1.-abs(x)-abs(y);\n        \n        vec4 b0=vec4(x.xy,y.xy);\n        vec4 b1=vec4(x.zw,y.zw);\n        \n        vec4 s0=floor(b0)*2.+1.;\n        vec4 s1=floor(b1)*2.+1.;\n        vec4 sh=-step(h,vec4(0.));\n        \n        vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\n        vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\n        \n        vec3 p0=vec3(a0.xy,h.x);\n        vec3 p1=vec3(a0.zw,h.y);\n        vec3 p2=vec3(a1.xy,h.z);\n        vec3 p3=vec3(a1.zw,h.w);\n        \n        //Normalise gradients\n        vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\n        p0*=norm.x;\n        p1*=norm.y;\n        p2*=norm.z;\n        p3*=norm.w;\n        \n        // Mix final noise value\n        vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\n        m=m*m;\n        return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),\n        dot(p2,x2),dot(p3,x3)));\n    }\n    \n    vec3 snoiseVec3(vec3 x){\n            return vec3(snoise(vec3(x)*2.-1.),\n            snoise(vec3(x.y-19.1,x.z+33.4,x.x+47.2))*2.-1.,\n            snoise(vec3(x.z+74.2,x.x-124.5,x.y+99.4)*2.-1.)\n        );\n    }\n\nvec3 curlNoise(vec3 p){\n    const float e=.1;\n    vec3 dx=vec3(e,0.,0.);\n    vec3 dy=vec3(0.,e,0.);\n    vec3 dz=vec3(0.,0.,e);\n    \n    vec3 p_x0=snoiseVec3(p-dx);\n    vec3 p_x1=snoiseVec3(p+dx);\n    vec3 p_y0=snoiseVec3(p-dy);\n    vec3 p_y1=snoiseVec3(p+dy);\n    vec3 p_z0=snoiseVec3(p-dz);\n    vec3 p_z1=snoiseVec3(p+dz);\n    \n    float x=p_y1.z-p_y0.z-p_z1.y+p_z0.y;\n    float y=p_z1.x-p_z0.x-p_x1.z+p_x0.z;\n    float z=p_x1.y-p_x0.y-p_y1.x+p_y0.x;\n    \n    const float divisor=1./(2.*e);\n    return normalize(vec3(x,y,z)*divisor);\n}\n\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n\nuniform float uTime;\nuniform float uProgress;\nvarying vec2 vUv;\nattribute vec3 customColor;\nvoid main(){\n\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\tvec3 noise=curlNoise(vec3(transformed.x*.02,transformed.y*.008,transformed.z*.05));\n\tvec3 distortion=vec3(transformed.x,transformed.y,transformed.z)*noise*uProgress*3.;\n\ttransformed=transformed+distortion;\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n  vColor = customColor;\n\n  gl_PointSize=2.;\n  vUv=uv;\n}\n",Be=Object.freeze({uTime:{value:0},uProgress:{value:0},color:{value:new u(16777215)}});const Xe={name:"particleMorph",data(){return{config:{noiseValueTransitionScale:this.$d3.scaleLinear([0,1],[0,3]),clock:new m},tweenInstance:null}},mounted(){const e=this.$refs.renderer;let n=this.initBoxGeo();const t=new ie({vertexColors:!0,vertexShader:Ge,uniforms:Be,fragmentShader:Ye});let o=new J(n,t);o.position.set(0,0,-300),o.rotation.y=Math.PI/4,this.$refs.scene.add(o);const i=o.geometry.getAttribute("position"),a=[],r=new u("skyblue");for(let s=0,c=i.count;s<c;s++)r.toArray(a,3*s);o.geometry.setAttribute("customColor",new v(a,3)),e.onBeforeRender((()=>{o.rotation.x+=.01,b.update()})),this.initMorphTween(o).start()},methods:{initMorphTween(e){let n=new b.Tween(e.material.uniforms.uProgress).delay(2e3).to({value:1},3e3),t=new b.Tween(e.material.uniforms.uProgress).delay(2e3).to({value:1},3e3),o=new b.Tween(e.material.uniforms.uProgress).delay(2e3).to({value:0},3e3),i=new b.Tween(e.morphTargetInfluences).delay(2e3).to({0:0,1:1},3e3),a=new b.Tween(e.morphTargetInfluences).delay(2e3).to({0:1,1:0},3e3).onComplete((()=>{n.start()}));return n.chain(i,o),i.chain(t),t.chain(a,o),n},initGUICtrl(e){const n=new ae,t={renderShader:"noiseShader",reset:()=>this.resetInstanceTween(e),title:"morphShader"};n.remember(t),n.add(t,"title");const o=n.add(t,"renderShader",["noiseShader","basicShader"]);n.add(t,"reset"),o.onChange((n=>{"basicShader"===n?(e.material.vertexShader="\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nuniform float uTime;\nuniform float uProgress;\nvarying vec2 vUv;\nattribute vec3 customColor;\nvoid main(){\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\n\tgl_PointSize = size;\n\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n\tvColor = customColor;\n}\n",e.material.fragmentShader="\nuniform vec3 color;\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n  gl_FragColor = vec4( color * vColor, 1.0 );\n\t\n\n}\n"):(e.material.vertexShader=Ge,e.material.fragmentShader=Ye),e.material.needsUpdate=!0,this.resetInstanceTween()}))},resetInstanceTween(e){e.material.uniforms.uProgress=0,e.morphTargetInfluences={0:1,1:0},b.removeAll(),this.tweenInstance.start()},initBoxGeo(){let e=[new re(150,150,150,100,100,100),new se(80,40,40,80)],n=e.map(((e,n)=>{const t=e.getAttribute("position"),o=`target${n}`;return t.name=o,t})),t=e[0];return t.morphAttributes.position=n,t}}};Xe.render=function(e,n,t,o,i,a){const d=r("Camera"),p=r("PointLight"),u=r("Scene"),m=r("Renderer");return s(),c(m,{ref:"renderer",antialias:"","orbit-ctrl":"",resize:"window"},{default:h((()=>[l(d,{position:{z:10}}),l(u,{ref:"scene"},{default:h((()=>[l(p,{position:{y:50,z:50,x:25}})])),_:1},512)])),_:1},512)};var Ze=[{path:"/polygonExplosion",component:be},{path:"/planeExplosion",component:_e},{path:"/cameraTester",component:Ce},{path:"/cbill",component:Ne},{path:"/gitIndex",component:Fe},{path:"/morph",component:Xe}];ce.extend(le);const qe=de({history:pe(),routes:Ze}),We=ue(xe);We.use(qe),We.use(me),We.mount("#app"),We.config.globalProperties.THREE=ve,We.config.globalProperties.$d3=he,We.config.globalProperties.dayjs=ce,We.config.globalProperties.lodash=fe;
